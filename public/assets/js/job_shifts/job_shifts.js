/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/job_shifts/job_shifts.js":
/*!******************************************************!*\
  !*** ./resources/assets/js/job_shifts/job_shifts.js ***!
  \******************************************************/
/***/ (() => {

eval("\n\n$(document).on('click', '.addJobShiftModal', function () {\n  $('#addJobShiftModal').appendTo('body').modal('show');\n});\n$(document).on('submit', '#addJobShiftForm', function (e) {\n  e.preventDefault();\n  if (!checkSummerNoteEmpty('#jobShiftDescription', 'Description field is required.', 1)) {\n    processingBtn('#addJobShiftForm', '#jobShiftBtnSave');\n    return true;\n  }\n  processingBtn('#addJobShiftForm', '#jobShiftBtnSave', 'loading');\n  $.ajax({\n    url: jobShiftSaveUrl,\n    type: 'POST',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#addJobShiftModal').modal('hide');\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#addJobShiftForm', '#jobShiftBtnSave');\n    }\n  });\n});\n$(document).on('click', '.edit-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var jobShiftId = $(event.currentTarget).attr('data-id');\n  renderData(jobShiftId);\n});\nwindow.renderData = function (id) {\n  $.ajax({\n    url: jobShiftUrl + id + '/edit',\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        var element = document.createElement('textarea');\n        element.innerHTML = result.data.shift;\n        $('#jobShiftId').val(result.data.id);\n        $('#editShift').val(element.value);\n        $('#editDescription').summernote('code', result.data.description);\n        $('#editModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n};\n$(document).on('submit', '#editForm', function (event) {\n  event.preventDefault();\n  if (!checkSummerNoteEmpty('#editDescription', 'Description field is required.', 1)) {\n    processingBtn('#editForm', '#btnEditSave');\n    return true;\n  }\n  processingBtn('#editForm', '#btnEditSave', 'loading');\n  var id = $('#jobShiftId').val();\n  $.ajax({\n    url: jobShiftUrl + id,\n    type: 'put',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#editModal').modal('hide');\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#editForm', '#btnEditSave');\n    }\n  });\n});\n$(document).on('click', '.show-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var jobShiftId = $(event.currentTarget).attr('data-id');\n  $.ajax({\n    url: jobShiftUrl + jobShiftId,\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        $('#showShift').html('');\n        $('#showDescription').html('');\n        $('#showShift').append(result.data.shift);\n        var element = document.createElement('textarea');\n        element.innerHTML = result.data.description;\n        $('#showDescription').append(element.value);\n        $('#showModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});\n$(document).on('click', '.delete-btn', function (event) {\n  var jobShiftId = $(event.currentTarget).attr('data-id');\n  swal({\n    title: Lang.get('messages.common.delete'),\n    text: Lang.get('messages.common.are_you_sure_want_to_delete') + '\"' + Lang.get('messages.job_shift.show_job_shift') + '\" ?',\n    type: 'warning',\n    showCancelButton: true,\n    closeOnConfirm: false,\n    showLoaderOnConfirm: true,\n    confirmButtonColor: '#6777ef',\n    cancelButtonColor: '#d33',\n    cancelButtonText: Lang.get('messages.common.no'),\n    confirmButtonText: Lang.get('messages.common.yes')\n  }, function () {\n    $.ajax({\n      url: jobShiftUrl + jobShiftId,\n      type: 'DELETE',\n      success: function success(result) {\n        if (result.success) {\n          window.livewire.emit('refresh');\n        }\n        swal({\n          title: Lang.get('messages.common.deleted'),\n          text: Lang.get('messages.job_shift.show_job_shift') + Lang.get('messages.common.has_been_deleted'),\n          type: 'success',\n          confirmButtonColor: '#6777ef',\n          timer: 2000\n        });\n      },\n      error: function error(data) {\n        swal({\n          title: '',\n          text: data.responseJSON.message,\n          type: 'error',\n          confirmButtonColor: '#6777ef',\n          timer: 2000\n        });\n      }\n    });\n  });\n});\n$('#addJobShiftModal').on('hidden.bs.modal', function () {\n  resetModalForm('#addJobShiftForm', '#jobShiftValidationErrorsBox');\n  $('#jobShiftDescription').summernote('code', '');\n});\n$('#editModal').on('hidden.bs.modal', function () {\n  resetModalForm('#editForm', '#editValidationErrorsBox');\n});\n$('#jobShiftDescription, #editDescription').summernote({\n  minHeight: 200,\n  height: 200,\n  toolbar: [['style', ['bold', 'italic', 'underline', 'clear']], ['font', ['strikethrough']], ['para', ['paragraph']]]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2pvYl9zaGlmdHMvam9iX3NoaWZ0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsRUFBRSxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxZQUFZO0VBQ3JERixDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQ0csUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDQyxLQUFLLENBQUMsTUFBTSxDQUFDO0FBQ3pELENBQUMsQ0FBQztBQUVGSixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLGtCQUFrQixFQUFFLFVBQVVHLENBQUMsRUFBRTtFQUN0REEsQ0FBQyxDQUFDQyxjQUFjLENBQUMsQ0FBQztFQUNsQixJQUFJLENBQUNDLG9CQUFvQixDQUFDLHNCQUFzQixFQUM1QyxnQ0FBZ0MsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUN0Q0MsYUFBYSxDQUFDLGtCQUFrQixFQUFFLGtCQUFrQixDQUFDO0lBQ3JELE9BQU8sSUFBSTtFQUNmO0VBQ0FBLGFBQWEsQ0FBQyxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxTQUFTLENBQUM7RUFDaEVSLENBQUMsQ0FBQ1MsSUFBSSxDQUFDO0lBQ0hDLEdBQUcsRUFBRUMsZUFBZTtJQUNwQkMsSUFBSSxFQUFFLE1BQU07SUFDWkMsSUFBSSxFQUFFYixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNjLFNBQVMsQ0FBQyxDQUFDO0lBQ3pCQyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBWUMsTUFBTSxFQUFFO01BQ3ZCLElBQUlBLE1BQU0sQ0FBQ0QsT0FBTyxFQUFFO1FBQ2hCRSxxQkFBcUIsQ0FBQ0QsTUFBTSxDQUFDRSxPQUFPLENBQUM7UUFDckNsQixDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQ0ksS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUNwQ2UsTUFBTSxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQyxTQUFTLENBQUM7TUFDbkM7SUFDSixDQUFDO0lBQ0RDLEtBQUssRUFBRSxTQUFQQSxLQUFLQSxDQUFZTixNQUFNLEVBQUU7TUFDckJPLG1CQUFtQixDQUFDUCxNQUFNLENBQUNRLFlBQVksQ0FBQ04sT0FBTyxDQUFDO0lBQ3BELENBQUM7SUFDRE8sUUFBUSxFQUFFLFNBQVZBLFFBQVFBLENBQUEsRUFBYztNQUNsQmpCLGFBQWEsQ0FBQyxrQkFBa0IsRUFBRSxrQkFBa0IsQ0FBQztJQUN6RDtFQUNKLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGUixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVd0IsS0FBSyxFQUFFO0VBQ2xELElBQUlDLGlCQUFpQixFQUFFO0lBQ25CO0VBQ0o7RUFDQUMsa0JBQWtCLENBQUMsQ0FBQztFQUNwQixJQUFJQyxVQUFVLEdBQUc3QixDQUFDLENBQUMwQixLQUFLLENBQUNJLGFBQWEsQ0FBQyxDQUFDQyxJQUFJLENBQUMsU0FBUyxDQUFDO0VBQ3ZEQyxVQUFVLENBQUNILFVBQVUsQ0FBQztBQUMxQixDQUFDLENBQUM7QUFFRlYsTUFBTSxDQUFDYSxVQUFVLEdBQUcsVUFBVUMsRUFBRSxFQUFFO0VBQzlCakMsQ0FBQyxDQUFDUyxJQUFJLENBQUM7SUFDSEMsR0FBRyxFQUFFd0IsV0FBVyxHQUFHRCxFQUFFLEdBQUcsT0FBTztJQUMvQnJCLElBQUksRUFBRSxLQUFLO0lBQ1hHLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFZQyxNQUFNLEVBQUU7TUFDdkIsSUFBSUEsTUFBTSxDQUFDRCxPQUFPLEVBQUU7UUFDaEIsSUFBSW9CLE9BQU8sR0FBR2xDLFFBQVEsQ0FBQ21DLGFBQWEsQ0FBQyxVQUFVLENBQUM7UUFDaERELE9BQU8sQ0FBQ0UsU0FBUyxHQUFHckIsTUFBTSxDQUFDSCxJQUFJLENBQUN5QixLQUFLO1FBQ3JDdEMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDdUMsR0FBRyxDQUFDdkIsTUFBTSxDQUFDSCxJQUFJLENBQUNvQixFQUFFLENBQUM7UUFDcENqQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUN1QyxHQUFHLENBQUNKLE9BQU8sQ0FBQ0ssS0FBSyxDQUFDO1FBQ2xDeEMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQ2pCeUMsVUFBVSxDQUFDLE1BQU0sRUFBRXpCLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDNkIsV0FBVyxDQUFDO1FBQy9DMUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUNDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDOUN1QyxpQkFBaUIsQ0FBQyxDQUFDO01BQ3ZCO0lBQ0osQ0FBQztJQUNEckIsS0FBSyxFQUFFLFNBQVBBLEtBQUtBLENBQVlOLE1BQU0sRUFBRTtNQUNyQk8sbUJBQW1CLENBQUNQLE1BQU0sQ0FBQ1EsWUFBWSxDQUFDTixPQUFPLENBQUM7SUFDcEQ7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDO0FBRURsQixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLFdBQVcsRUFBRSxVQUFVd0IsS0FBSyxFQUFFO0VBQ25EQSxLQUFLLENBQUNwQixjQUFjLENBQUMsQ0FBQztFQUN0QixJQUFJLENBQUNDLG9CQUFvQixDQUFDLGtCQUFrQixFQUN4QyxnQ0FBZ0MsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUN0Q0MsYUFBYSxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUM7SUFDMUMsT0FBTyxJQUFJO0VBQ2Y7RUFDQUEsYUFBYSxDQUFDLFdBQVcsRUFBRSxjQUFjLEVBQUUsU0FBUyxDQUFDO0VBQ3JELElBQU15QixFQUFFLEdBQUdqQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUN1QyxHQUFHLENBQUMsQ0FBQztFQUNqQ3ZDLENBQUMsQ0FBQ1MsSUFBSSxDQUFDO0lBQ0hDLEdBQUcsRUFBRXdCLFdBQVcsR0FBR0QsRUFBRTtJQUNyQnJCLElBQUksRUFBRSxLQUFLO0lBQ1hDLElBQUksRUFBRWIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDYyxTQUFTLENBQUMsQ0FBQztJQUN6QkMsT0FBTyxFQUFFLFNBQVRBLE9BQU9BLENBQVlDLE1BQU0sRUFBRTtNQUN2QixJQUFJQSxNQUFNLENBQUNELE9BQU8sRUFBRTtRQUNoQkUscUJBQXFCLENBQUNELE1BQU0sQ0FBQ0UsT0FBTyxDQUFDO1FBQ3JDbEIsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDSSxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQzdCZSxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDLFNBQVMsQ0FBQztNQUNuQztJQUNKLENBQUM7SUFDREMsS0FBSyxFQUFFLFNBQVBBLEtBQUtBLENBQVlOLE1BQU0sRUFBRTtNQUNyQk8sbUJBQW1CLENBQUNQLE1BQU0sQ0FBQ1EsWUFBWSxDQUFDTixPQUFPLENBQUM7SUFDcEQsQ0FBQztJQUNETyxRQUFRLEVBQUUsU0FBVkEsUUFBUUEsQ0FBQSxFQUFjO01BQ2xCakIsYUFBYSxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUM7SUFDOUM7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDLENBQUM7QUFFRlIsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsRUFBRSxDQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsVUFBVXdCLEtBQUssRUFBRTtFQUNsRCxJQUFJQyxpQkFBaUIsRUFBRTtJQUNuQjtFQUNKO0VBQ0FDLGtCQUFrQixDQUFDLENBQUM7RUFDcEIsSUFBSUMsVUFBVSxHQUFHN0IsQ0FBQyxDQUFDMEIsS0FBSyxDQUFDSSxhQUFhLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFNBQVMsQ0FBQztFQUN2RC9CLENBQUMsQ0FBQ1MsSUFBSSxDQUFDO0lBQ0hDLEdBQUcsRUFBRXdCLFdBQVcsR0FBR0wsVUFBVTtJQUM3QmpCLElBQUksRUFBRSxLQUFLO0lBQ1hHLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFZQyxNQUFNLEVBQUU7TUFDdkIsSUFBSUEsTUFBTSxDQUFDRCxPQUFPLEVBQUU7UUFDaEJmLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQzRDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDeEI1QyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQzRDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDOUI1QyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM2QyxNQUFNLENBQUM3QixNQUFNLENBQUNILElBQUksQ0FBQ3lCLEtBQUssQ0FBQztRQUN6QyxJQUFJSCxPQUFPLEdBQUdsQyxRQUFRLENBQUNtQyxhQUFhLENBQUMsVUFBVSxDQUFDO1FBQ2hERCxPQUFPLENBQUNFLFNBQVMsR0FBR3JCLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDNkIsV0FBVztRQUMzQzFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDNkMsTUFBTSxDQUFDVixPQUFPLENBQUNLLEtBQUssQ0FBQztRQUMzQ3hDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQ0csUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDQyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQzlDdUMsaUJBQWlCLENBQUMsQ0FBQztNQUN2QjtJQUNKLENBQUM7SUFDRHJCLEtBQUssRUFBRSxTQUFQQSxLQUFLQSxDQUFZTixNQUFNLEVBQUU7TUFDckJPLG1CQUFtQixDQUFDUCxNQUFNLENBQUNRLFlBQVksQ0FBQ04sT0FBTyxDQUFDO0lBQ3BEO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBRUZsQixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVd0IsS0FBSyxFQUFFO0VBQ3BELElBQUlHLFVBQVUsR0FBRzdCLENBQUMsQ0FBQzBCLEtBQUssQ0FBQ0ksYUFBYSxDQUFDLENBQUNDLElBQUksQ0FBQyxTQUFTLENBQUM7RUFDdkRlLElBQUksQ0FBQztJQUNEQyxLQUFLLEVBQUVDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0lBQ3pDQyxJQUFJLEVBQUVGLElBQUksQ0FBQ0MsR0FBRyxDQUFDLDZDQUE2QyxDQUFDLEdBQUcsR0FBRyxHQUFHRCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQyxHQUFHLEtBQUs7SUFDM0hyQyxJQUFJLEVBQUUsU0FBUztJQUNmdUMsZ0JBQWdCLEVBQUUsSUFBSTtJQUN0QkMsY0FBYyxFQUFFLEtBQUs7SUFDckJDLG1CQUFtQixFQUFFLElBQUk7SUFDekJDLGtCQUFrQixFQUFFLFNBQVM7SUFDN0JDLGlCQUFpQixFQUFFLE1BQU07SUFDekJDLGdCQUFnQixFQUFFUixJQUFJLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztJQUNoRFEsaUJBQWlCLEVBQUVULElBQUksQ0FBQ0MsR0FBRyxDQUFDLHFCQUFxQjtFQUNyRCxDQUFDLEVBQUUsWUFBWTtJQUNYakQsQ0FBQyxDQUFDUyxJQUFJLENBQUM7TUFDSEMsR0FBRyxFQUFFd0IsV0FBVyxHQUFHTCxVQUFVO01BQzdCakIsSUFBSSxFQUFFLFFBQVE7TUFDZEcsT0FBTyxFQUFFLFNBQVNBLE9BQU9BLENBQUNDLE1BQU0sRUFBRTtRQUM5QixJQUFJQSxNQUFNLENBQUNELE9BQU8sRUFBRTtVQUNoQkksTUFBTSxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDbkM7UUFFQXlCLElBQUksQ0FBQztVQUNEQyxLQUFLLEVBQUVDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLHlCQUF5QixDQUFDO1VBQzFDQyxJQUFJLEVBQUVGLElBQUksQ0FBQ0MsR0FBRyxDQUFDLG1DQUFtQyxDQUFDLEdBQUdELElBQUksQ0FBQ0MsR0FBRyxDQUFDLGtDQUFrQyxDQUFDO1VBQ2xHckMsSUFBSSxFQUFFLFNBQVM7VUFDZjBDLGtCQUFrQixFQUFFLFNBQVM7VUFDN0JJLEtBQUssRUFBRTtRQUNYLENBQUMsQ0FBQztNQUNOLENBQUM7TUFDRHBDLEtBQUssRUFBRSxTQUFTQSxLQUFLQSxDQUFDVCxJQUFJLEVBQUU7UUFDeEJpQyxJQUFJLENBQUM7VUFDREMsS0FBSyxFQUFFLEVBQUU7VUFDVEcsSUFBSSxFQUFFckMsSUFBSSxDQUFDVyxZQUFZLENBQUNOLE9BQU87VUFDL0JOLElBQUksRUFBRSxPQUFPO1VBQ2IwQyxrQkFBa0IsRUFBRSxTQUFTO1VBQzdCSSxLQUFLLEVBQUU7UUFDWCxDQUFDLENBQUM7TUFDTjtJQUNKLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGMUQsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUNFLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxZQUFZO0VBQ3JEeUQsY0FBYyxDQUFDLGtCQUFrQixFQUFFLDhCQUE4QixDQUFDO0VBQ2xFM0QsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLENBQUN5QyxVQUFVLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQztBQUNwRCxDQUFDLENBQUM7QUFFRnpDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQ0UsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7RUFDOUN5RCxjQUFjLENBQUMsV0FBVyxFQUFFLDBCQUEwQixDQUFDO0FBQzNELENBQUMsQ0FBQztBQUVGM0QsQ0FBQyxDQUFDLHdDQUF3QyxDQUFDLENBQUN5QyxVQUFVLENBQUM7RUFDbkRtQixTQUFTLEVBQUUsR0FBRztFQUNkQyxNQUFNLEVBQUUsR0FBRztFQUNYQyxPQUFPLEVBQUUsQ0FDTCxDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQ25ELENBQUMsTUFBTSxFQUFFLENBQUMsZUFBZSxDQUFDLENBQUMsRUFDM0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMvQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2pvYl9zaGlmdHMvam9iX3NoaWZ0cy5qcz8wMzE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5hZGRKb2JTaGlmdE1vZGFsJywgZnVuY3Rpb24gKCkge1xuICAgICQoJyNhZGRKb2JTaGlmdE1vZGFsJykuYXBwZW5kVG8oJ2JvZHknKS5tb2RhbCgnc2hvdycpO1xufSk7XG5cbiQoZG9jdW1lbnQpLm9uKCdzdWJtaXQnLCAnI2FkZEpvYlNoaWZ0Rm9ybScsIGZ1bmN0aW9uIChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICghY2hlY2tTdW1tZXJOb3RlRW1wdHkoJyNqb2JTaGlmdERlc2NyaXB0aW9uJyxcbiAgICAgICAgJ0Rlc2NyaXB0aW9uIGZpZWxkIGlzIHJlcXVpcmVkLicsIDEpKSB7XG4gICAgICAgIHByb2Nlc3NpbmdCdG4oJyNhZGRKb2JTaGlmdEZvcm0nLCAnI2pvYlNoaWZ0QnRuU2F2ZScpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcHJvY2Vzc2luZ0J0bignI2FkZEpvYlNoaWZ0Rm9ybScsICcjam9iU2hpZnRCdG5TYXZlJywgJ2xvYWRpbmcnKTtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IGpvYlNoaWZ0U2F2ZVVybCxcbiAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICBkYXRhOiAkKHRoaXMpLnNlcmlhbGl6ZSgpLFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5U3VjY2Vzc01lc3NhZ2UocmVzdWx0Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICQoJyNhZGRKb2JTaGlmdE1vZGFsJykubW9kYWwoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICB3aW5kb3cubGl2ZXdpcmUuZW1pdCgncmVmcmVzaCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgZGlzcGxheUVycm9yTWVzc2FnZShyZXN1bHQucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICAgICAgICB9LFxuICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcHJvY2Vzc2luZ0J0bignI2FkZEpvYlNoaWZ0Rm9ybScsICcjam9iU2hpZnRCdG5TYXZlJyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59KTtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5lZGl0LWJ0bicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGlmIChhamF4Q2FsbElzUnVubmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGFqYXhDYWxsSW5Qcm9ncmVzcygpO1xuICAgIGxldCBqb2JTaGlmdElkID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5hdHRyKCdkYXRhLWlkJyk7XG4gICAgcmVuZGVyRGF0YShqb2JTaGlmdElkKTtcbn0pO1xuXG53aW5kb3cucmVuZGVyRGF0YSA9IGZ1bmN0aW9uIChpZCkge1xuICAgICQuYWpheCh7XG4gICAgICAgIHVybDogam9iU2hpZnRVcmwgKyBpZCArICcvZWRpdCcsXG4gICAgICAgIHR5cGU6ICdHRVQnLFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSByZXN1bHQuZGF0YS5zaGlmdDtcbiAgICAgICAgICAgICAgICAkKCcjam9iU2hpZnRJZCcpLnZhbChyZXN1bHQuZGF0YS5pZCk7XG4gICAgICAgICAgICAgICAgJCgnI2VkaXRTaGlmdCcpLnZhbChlbGVtZW50LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAkKCcjZWRpdERlc2NyaXB0aW9uJykuXG4gICAgICAgICAgICAgICAgICAgIHN1bW1lcm5vdGUoJ2NvZGUnLCByZXN1bHQuZGF0YS5kZXNjcmlwdGlvbik7XG4gICAgICAgICAgICAgICAgJCgnI2VkaXRNb2RhbCcpLmFwcGVuZFRvKCdib2R5JykubW9kYWwoJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICBhamF4Q2FsbENvbXBsZXRlZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgZGlzcGxheUVycm9yTWVzc2FnZShyZXN1bHQucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICAgICAgICB9LFxuICAgIH0pO1xufTtcblxuJChkb2N1bWVudCkub24oJ3N1Ym1pdCcsICcjZWRpdEZvcm0nLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICghY2hlY2tTdW1tZXJOb3RlRW1wdHkoJyNlZGl0RGVzY3JpcHRpb24nLFxuICAgICAgICAnRGVzY3JpcHRpb24gZmllbGQgaXMgcmVxdWlyZWQuJywgMSkpIHtcbiAgICAgICAgcHJvY2Vzc2luZ0J0bignI2VkaXRGb3JtJywgJyNidG5FZGl0U2F2ZScpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcHJvY2Vzc2luZ0J0bignI2VkaXRGb3JtJywgJyNidG5FZGl0U2F2ZScsICdsb2FkaW5nJyk7XG4gICAgY29uc3QgaWQgPSAkKCcjam9iU2hpZnRJZCcpLnZhbCgpO1xuICAgICQuYWpheCh7XG4gICAgICAgIHVybDogam9iU2hpZnRVcmwgKyBpZCxcbiAgICAgICAgdHlwZTogJ3B1dCcsXG4gICAgICAgIGRhdGE6ICQodGhpcykuc2VyaWFsaXplKCksXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIGRpc3BsYXlTdWNjZXNzTWVzc2FnZShyZXN1bHQubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgJCgnI2VkaXRNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgd2luZG93LmxpdmV3aXJlLmVtaXQoJ3JlZnJlc2gnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGRpc3BsYXlFcnJvck1lc3NhZ2UocmVzdWx0LnJlc3BvbnNlSlNPTi5tZXNzYWdlKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHByb2Nlc3NpbmdCdG4oJyNlZGl0Rm9ybScsICcjYnRuRWRpdFNhdmUnKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnLnNob3ctYnRuJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgaWYgKGFqYXhDYWxsSXNSdW5uaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgYWpheENhbGxJblByb2dyZXNzKCk7XG4gICAgbGV0IGpvYlNoaWZ0SWQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2RhdGEtaWQnKTtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IGpvYlNoaWZ0VXJsICsgam9iU2hpZnRJZCxcbiAgICAgICAgdHlwZTogJ0dFVCcsXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICQoJyNzaG93U2hpZnQnKS5odG1sKCcnKTtcbiAgICAgICAgICAgICAgICAkKCcjc2hvd0Rlc2NyaXB0aW9uJykuaHRtbCgnJyk7XG4gICAgICAgICAgICAgICAgJCgnI3Nob3dTaGlmdCcpLmFwcGVuZChyZXN1bHQuZGF0YS5zaGlmdCk7XG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gcmVzdWx0LmRhdGEuZGVzY3JpcHRpb247XG4gICAgICAgICAgICAgICAgJCgnI3Nob3dEZXNjcmlwdGlvbicpLmFwcGVuZChlbGVtZW50LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAkKCcjc2hvd01vZGFsJykuYXBwZW5kVG8oJ2JvZHknKS5tb2RhbCgnc2hvdycpO1xuICAgICAgICAgICAgICAgIGFqYXhDYWxsQ29tcGxldGVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBkaXNwbGF5RXJyb3JNZXNzYWdlKHJlc3VsdC5yZXNwb25zZUpTT04ubWVzc2FnZSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59KTtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5kZWxldGUtYnRuJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgbGV0IGpvYlNoaWZ0SWQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2RhdGEtaWQnKTtcbiAgICBzd2FsKHtcbiAgICAgICAgdGl0bGU6IExhbmcuZ2V0KCdtZXNzYWdlcy5jb21tb24uZGVsZXRlJykgLFxuICAgICAgICB0ZXh0OiBMYW5nLmdldCgnbWVzc2FnZXMuY29tbW9uLmFyZV95b3Vfc3VyZV93YW50X3RvX2RlbGV0ZScpICsgJ1wiJyArIExhbmcuZ2V0KCdtZXNzYWdlcy5qb2Jfc2hpZnQuc2hvd19qb2Jfc2hpZnQnKSArICdcIiA/JyxcbiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLFxuICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxuICAgICAgICBjbG9zZU9uQ29uZmlybTogZmFsc2UsXG4gICAgICAgIHNob3dMb2FkZXJPbkNvbmZpcm06IHRydWUsXG4gICAgICAgIGNvbmZpcm1CdXR0b25Db2xvcjogJyM2Nzc3ZWYnLFxuICAgICAgICBjYW5jZWxCdXR0b25Db2xvcjogJyNkMzMnLFxuICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiBMYW5nLmdldCgnbWVzc2FnZXMuY29tbW9uLm5vJyksXG4gICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiBMYW5nLmdldCgnbWVzc2FnZXMuY29tbW9uLnllcycpXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBqb2JTaGlmdFVybCArIGpvYlNoaWZ0SWQsXG4gICAgICAgICAgICB0eXBlOiAnREVMRVRFJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5saXZld2lyZS5lbWl0KCdyZWZyZXNoJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc3dhbCh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBMYW5nLmdldCgnbWVzc2FnZXMuY29tbW9uLmRlbGV0ZWQnKSAsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IExhbmcuZ2V0KCdtZXNzYWdlcy5qb2Jfc2hpZnQuc2hvd19qb2Jfc2hpZnQnKSArIExhbmcuZ2V0KCdtZXNzYWdlcy5jb21tb24uaGFzX2JlZW5fZGVsZXRlZCcpLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25Db2xvcjogJyM2Nzc3ZWYnLFxuICAgICAgICAgICAgICAgICAgICB0aW1lcjogMjAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcihkYXRhKSB7XG4gICAgICAgICAgICAgICAgc3dhbCh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogZGF0YS5yZXNwb25zZUpTT04ubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAnIzY3NzdlZicsXG4gICAgICAgICAgICAgICAgICAgIHRpbWVyOiAyMDAwXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cbiQoJyNhZGRKb2JTaGlmdE1vZGFsJykub24oJ2hpZGRlbi5icy5tb2RhbCcsIGZ1bmN0aW9uICgpIHtcbiAgICByZXNldE1vZGFsRm9ybSgnI2FkZEpvYlNoaWZ0Rm9ybScsICcjam9iU2hpZnRWYWxpZGF0aW9uRXJyb3JzQm94Jyk7XG4gICAgJCgnI2pvYlNoaWZ0RGVzY3JpcHRpb24nKS5zdW1tZXJub3RlKCdjb2RlJywgJycpO1xufSk7XG5cbiQoJyNlZGl0TW9kYWwnKS5vbignaGlkZGVuLmJzLm1vZGFsJywgZnVuY3Rpb24gKCkge1xuICAgIHJlc2V0TW9kYWxGb3JtKCcjZWRpdEZvcm0nLCAnI2VkaXRWYWxpZGF0aW9uRXJyb3JzQm94Jyk7XG59KTtcblxuJCgnI2pvYlNoaWZ0RGVzY3JpcHRpb24sICNlZGl0RGVzY3JpcHRpb24nKS5zdW1tZXJub3RlKHtcbiAgICBtaW5IZWlnaHQ6IDIwMCxcbiAgICBoZWlnaHQ6IDIwMCxcbiAgICB0b29sYmFyOiBbXG4gICAgICAgIFsnc3R5bGUnLCBbJ2JvbGQnLCAnaXRhbGljJywgJ3VuZGVybGluZScsICdjbGVhciddXSxcbiAgICAgICAgWydmb250JywgWydzdHJpa2V0aHJvdWdoJ11dLFxuICAgICAgICBbJ3BhcmEnLCBbJ3BhcmFncmFwaCddXV0sXG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJvbiIsImFwcGVuZFRvIiwibW9kYWwiLCJlIiwicHJldmVudERlZmF1bHQiLCJjaGVja1N1bW1lck5vdGVFbXB0eSIsInByb2Nlc3NpbmdCdG4iLCJhamF4IiwidXJsIiwiam9iU2hpZnRTYXZlVXJsIiwidHlwZSIsImRhdGEiLCJzZXJpYWxpemUiLCJzdWNjZXNzIiwicmVzdWx0IiwiZGlzcGxheVN1Y2Nlc3NNZXNzYWdlIiwibWVzc2FnZSIsIndpbmRvdyIsImxpdmV3aXJlIiwiZW1pdCIsImVycm9yIiwiZGlzcGxheUVycm9yTWVzc2FnZSIsInJlc3BvbnNlSlNPTiIsImNvbXBsZXRlIiwiZXZlbnQiLCJhamF4Q2FsbElzUnVubmluZyIsImFqYXhDYWxsSW5Qcm9ncmVzcyIsImpvYlNoaWZ0SWQiLCJjdXJyZW50VGFyZ2V0IiwiYXR0ciIsInJlbmRlckRhdGEiLCJpZCIsImpvYlNoaWZ0VXJsIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJzaGlmdCIsInZhbCIsInZhbHVlIiwic3VtbWVybm90ZSIsImRlc2NyaXB0aW9uIiwiYWpheENhbGxDb21wbGV0ZWQiLCJodG1sIiwiYXBwZW5kIiwic3dhbCIsInRpdGxlIiwiTGFuZyIsImdldCIsInRleHQiLCJzaG93Q2FuY2VsQnV0dG9uIiwiY2xvc2VPbkNvbmZpcm0iLCJzaG93TG9hZGVyT25Db25maXJtIiwiY29uZmlybUJ1dHRvbkNvbG9yIiwiY2FuY2VsQnV0dG9uQ29sb3IiLCJjYW5jZWxCdXR0b25UZXh0IiwiY29uZmlybUJ1dHRvblRleHQiLCJ0aW1lciIsInJlc2V0TW9kYWxGb3JtIiwibWluSGVpZ2h0IiwiaGVpZ2h0IiwidG9vbGJhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/js/job_shifts/job_shifts.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/job_shifts/job_shifts.js"]();
/******/ 	
/******/ })()
;