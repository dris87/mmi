/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/job_applications/job_applications.js":
/*!******************************************************************!*\
  !*** ./resources/assets/js/job_applications/job_applications.js ***!
  \******************************************************************/
/***/ (() => {

eval("\n\n$(document).ready(function () {\n  $('#filterStatus').select2();\n});\nvar tableName = '#jobApplicationsTbl';\n$(tableName).DataTable({\n  processing: true,\n  serverSide: true,\n  'order': [[0, 'asc']],\n  ajax: {\n    url: jobApplicationsUrl,\n    type: 'GET',\n    data: function data(_data) {\n      _data.status = $('#filterStatus').find('option:selected').val();\n    }\n  },\n  columnDefs: [{\n    'targets': [0],\n    'className': 'text-center',\n    'width': '15%'\n  }, {\n    'targets': [2],\n    'className': 'text-right',\n    'width': '15%'\n  }, {\n    'targets': [3],\n    'className': 'text-center',\n    'width': '13%',\n    'orderable': false\n  }, {\n    'targets': [4],\n    'className': 'text-center',\n    'width': '13%'\n  }, {\n    'targets': [5],\n    'className': 'text-center',\n    'width': '15%',\n    'orderable': false\n  }, {\n    'targets': [6],\n    'className': 'text-center',\n    'width': '12%',\n    'orderable': false\n  }],\n  columns: [{\n    data: function data(row) {\n      var showLink = candidateDetailsUrl + '/' + row.candidate.unique_id;\n      return '<a href=\"' + showLink + '\">' + row.candidate.user.full_name + '</a>';\n    },\n    name: 'candidate.user.first_name'\n  }, {\n    data: function data(row) {\n      return row.job.currency.currency_icon + '&nbsp;' + currency(row.expected_salary).format();\n    },\n    name: 'expected_salary'\n  }, {\n    data: function data(row) {\n      return moment(row.created_at, 'YYYY-MM-DD').format('Do MMM, YYYY');\n    },\n    name: 'created_at'\n  }, {\n    data: function data(row) {\n      if (!row.hasResumeAvailable) {\n        var downloadLink = downloadDocumentUrl + '/' + row.id;\n        return '<a href=\"' + downloadLink + '\">' + 'Download' + '</a>';\n      }\n      return 'N/A';\n    },\n    name: 'candidate.user.last_name'\n  }, {\n    data: function data(row) {\n      return !isEmpty(row.job_stage_id) ? row.job_stage.name : '<i class=\"font-20 fas fa-times-circle text-danger\"></i>';\n    },\n    name: 'jobStage.name'\n  }, {\n    data: function data(row) {\n      var statusColor = {\n        '0': 'warning',\n        '1': 'primary',\n        '2': 'danger',\n        '3': 'info',\n        '4': 'success'\n      };\n      return '<span class=\"badge badge-' + statusColor[row.status] + '\">' + statusArray[row.status] + '</span>';\n    },\n    name: 'status'\n  }, {\n    data: function data(row) {\n      var todayDate = new Date().toISOString().split('T')[0];\n      var isJobExpiry = false;\n      if (todayDate > row.job.job_expiry_date) {\n        isJobExpiry = true;\n      }\n      var viewSlotScreen = jobApplicationsUrl + '/' + row.id + '/slots';\n      var isCompleted = false;\n      var isShortlisted = false;\n      var isJobStage = false;\n      var isRejected = false;\n      var isApplied = false;\n      if (row.status == 1) {\n        isApplied = true;\n      }\n      if (row.status == 2) {\n        isRejected = true;\n      }\n      if (row.status == 3) {\n        isCompleted = true;\n      }\n      if (row.status == 4) {\n        isShortlisted = true;\n      }\n      if (!isEmpty(row.job_stage_id)) {\n        isJobStage = true;\n      }\n      var data = [{\n        'statusId': row.status,\n        'id': row.id,\n        'isApplied': isApplied,\n        'isCompleted': isCompleted,\n        'isShortlisted': isShortlisted,\n        'isJobStage': isJobStage,\n        'isRejected': isRejected,\n        'viewSlotsScreen': viewSlotScreen,\n        'isJobExpiry': isJobExpiry\n      }];\n      return prepareTemplateRender('#jobApplicationActionTemplate', data);\n    },\n    name: 'id'\n  }],\n  'fnInitComplete': function fnInitComplete() {\n    $('#filterStatus').change(function () {\n      $('#jobApplicationsTbl').DataTable().ajax.reload(null, true);\n    });\n  }\n});\n$(document).on('click', '.action-delete', function (event) {\n  var jobApplicationId = $(event.currentTarget).data('id');\n  deleteItem(jobApplicationDeleteUrl + '/' + jobApplicationId, tableName, Lang.get('messages.job_application.job_application'));\n});\n$(document).on('click', '.short-list', function (event) {\n  var jobApplicationId = $(event.currentTarget).data('id');\n  var applicationStatus = 4;\n  changeStatus(jobApplicationId, applicationStatus);\n});\n$(document).on('click', '.action-completed', function (event) {\n  var jobApplicationId = $(event.currentTarget).data('id');\n  var applicationStatus = 3;\n  selectedItem(jobApplicationId, applicationStatus);\n});\n$(document).on('click', '.action-decline', function (event) {\n  var jobApplicationId = $(event.currentTarget).data('id');\n  var applicationStatus = 2;\n  rejectedItem(jobApplicationId, applicationStatus);\n});\nwindow.changeStatus = function (id, applicationStatus) {\n  $.ajax({\n    url: jobApplicationStatusUrl + id + '/status/' + applicationStatus,\n    method: 'get',\n    cache: false,\n    success: function success(result) {\n      if (result.success) {\n        $(tableName).DataTable().ajax.reload(null, false);\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n};\nwindow.rejectedItem = function (id, applicationStatus) {\n  swal({\n    title: Lang.get('messages.common.rejected') + ' !',\n    text: Lang.get('messages.common.are_you_sure_want_to_reject') + '\"' + Lang.get('messages.job_application.job_application') + '\" ?',\n    type: 'warning',\n    showCancelButton: true,\n    closeOnConfirm: false,\n    showLoaderOnConfirm: true,\n    confirmButtonColor: '#6777ef',\n    cancelButtonColor: '#d33',\n    cancelButtonText: Lang.get('messages.common.no'),\n    confirmButtonText: Lang.get('messages.common.yes')\n  }, function () {\n    changeStatus(id, applicationStatus);\n    swal({\n      title: Lang.get('messages.common.rejected'),\n      text: Lang.get('messages.job_application.job_application') + ' ' + Lang.get('messages.common.has_been_rejected'),\n      type: 'success',\n      confirmButtonColor: '#6777ef',\n      timer: 2000\n    });\n  });\n};\nwindow.selectedItem = function (id, applicationStatus) {\n  swal({\n    title: Lang.get('messages.common.selected') + ' !',\n    text: Lang.get('messages.common.are_you_sure_want_to_select') + '\"' + Lang.get('messages.job_application.job_application') + '\" ?',\n    type: 'warning',\n    showCancelButton: true,\n    closeOnConfirm: false,\n    showLoaderOnConfirm: true,\n    confirmButtonColor: '#6777ef',\n    cancelButtonColor: '#d33',\n    cancelButtonText: Lang.get('messages.common.no'),\n    confirmButtonText: Lang.get('messages.common.yes')\n  }, function () {\n    changeStatus(id, applicationStatus);\n    swal({\n      title: Lang.get('messages.common.selected'),\n      text: Lang.get('messages.job_application.job_application') + ' ' + Lang.get('messages.common.has_been_selected'),\n      type: 'success',\n      confirmButtonColor: '#6777ef',\n      timer: 2000\n    });\n  });\n};\n$(document).on('click', '.change-job-stage', function () {\n  var id = $(this).data('id');\n  $('#jobApplicationId').val(id);\n  $('#changeJobStageModal').appendTo('body').modal('show');\n});\n$(document).on('submit', '#changeJobStageForm', function (e) {\n  e.preventDefault();\n  processingBtn('#changeJobStageForm', '#changeJobStageBtnSave', 'loading');\n  $.ajax({\n    url: changeJobStage,\n    type: 'POST',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#changeJobStageModal').modal('hide');\n        $(tableName).DataTable().ajax.reload(null, false);\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#changeJobStageForm', '#changeJobStageBtnSave');\n    }\n  });\n});\n$('#changeJobStageModal').on('hidden.bs.modal', function () {\n  $('#jobStageId').val('').trigger('change');\n});\n$(document).ready(function () {\n  $('#jobStageId').select2({\n    width: '100%'\n  });\n  $(document).on('click', '.change-job-stage', function () {\n    $.ajax({\n      url: stageCheck,\n      type: 'GET',\n      success: function success(result) {\n        var data = result.data;\n        var current_stage = '';\n        if (data.current_stage != null) {\n          var jobStages = Object.values(data.job_stages);\n          $.each(jobStages, function (key, val) {\n            if (val == data.job_stages[data.current_stage]) {\n              current_stage = key;\n              return true;\n            }\n          });\n        } else {\n          current_stage = 0;\n        }\n        var nextStage = current_stage + 1;\n        $('#jobStageId').empty();\n        $('#jobStageId').append('<option value=\"\" >Select Job Stage</option>');\n        var stageIndex = 0;\n        $.each(data.job_stages, function (key, val) {\n          var disabled = data.current_stage_cleared == true && nextStage != stageIndex || data.current_stage_cleared == false && current_stage != stageIndex ? 'disabled' : '';\n          $('#jobStageId').append(\"<option value=\\\"\".concat(key, \"\\\" \").concat(disabled, \">\").concat(val, \"</option>\"));\n          stageIndex++;\n        });\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/job_applications/job_applications.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/job_applications/job_applications.js"]();
/******/ 	
/******/ })()
;