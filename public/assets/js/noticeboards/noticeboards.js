/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/noticeboards/noticeboards.js":
/*!**********************************************************!*\
  !*** ./resources/assets/js/noticeboards/noticeboards.js ***!
  \**********************************************************/
/***/ (() => {

eval("\n\n$(document).on('click', '.addNoticeboardModal', function () {\n  $('#addModal').appendTo('body').modal('show');\n});\n$(document).on('submit', '#addNewForm', function (e) {\n  e.preventDefault();\n  if (!checkSummerNoteEmpty('#description', 'Description field is required.', 1)) {\n    return true;\n  }\n  processingBtn('#addNewForm', '#btnSave', 'loading');\n  $.ajax({\n    url: noticeboardSaveUrl,\n    type: 'POST',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#addModal').modal('hide');\n        //window.livewire.emit('refresh');\n        $('#noticeboardsTbl').DataTable().ajax.reload(null, false);\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#addNewForm', '#btnSave');\n    }\n  });\n});\n$(document).on('click', '.edit-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var noticeboardId = $(event.currentTarget).data('id');\n  renderData(noticeboardId);\n});\nwindow.renderData = function (id) {\n  $.ajax({\n    url: noticeboardUrl + id + '/edit',\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        var element = document.createElement('textarea');\n        element.innerHTML = result.data.title;\n        $('#noticeboardId').val(result.data.id);\n        $('#editTitle').val(element.value);\n        $('#editDescription').summernote('code', result.data.description);\n        result.data.is_active == 1 ? $('#editIsActive').prop('checked', true) : $('#editIsActive').prop('checked', false);\n        $('#editModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n};\n$(document).on('submit', '#editForm', function (event) {\n  event.preventDefault();\n  if (!checkSummerNoteEmpty('#editDescription', 'Description field is required.', 1)) {\n    return true;\n  }\n  processingBtn('#editForm', '#btnEditSave', 'loading');\n  var id = $('#noticeboardId').val();\n  $.ajax({\n    url: noticeboardUrl + id,\n    type: 'put',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#editModal').modal('hide');\n        //window.livewire.emit('refresh');\n        $('#noticeboardsTbl').DataTable().ajax.reload();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#editForm', '#btnEditSave');\n    }\n  });\n});\n$(document).on('click', '.show-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var noticeboardId = $(event.currentTarget).data('id');\n  $.ajax({\n    url: noticeboardUrl + noticeboardId,\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        $('#showTitle').html('');\n        $('#showDescription').html('');\n        $('#showTitle').append(result.data.title);\n        var element = document.createElement('textarea');\n        element.innerHTML = !isEmpty(result.data.description) ? result.data.description : 'N/A';\n        $('#showDescription').append(element.value);\n        result.data.is_active === 1 ? $('#showIsActive').html('Active') : $('#showIsActive').html('Deactive');\n        $('#showModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});\n$(document).on('click', '.delete-btn', function (event) {\n  var noticeboardId = $(event.currentTarget).attr('data-id');\n  deleteItem(noticeboardUrl + noticeboardId, '#noticeboardsTbl', Lang.get('messages.noticeboard.noticeboard'));\n});\n$(document).on('change', '.isActive', function (event) {\n  var noticeId = $(event.currentTarget).data('id');\n  $.ajax({\n    url: noticeboardUrl + noticeId + '/' + 'change-status',\n    method: 'post',\n    cache: false,\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        //window.livewire.emit('refresh');\n        $('#noticeboardsTbl').DataTable().ajax.reload();\n      }\n    }\n  });\n});\n$('#addModal').on('hidden.bs.modal', function () {\n  resetModalForm('#addNewForm', '#validationErrorsBox');\n  $('#description').summernote('code', '');\n});\n$('#editModal').on('hidden.bs.modal', function () {\n  resetModalForm('#editForm', '#editValidationErrorsBox');\n});\n$('#description, #editDescription').summernote({\n  minHeight: 200,\n  height: 200,\n  toolbar: [['style', ['bold', 'italic', 'underline', 'clear']], ['font', ['strikethrough']], ['para', ['paragraph']]]\n});\n$(document).ready(function () {\n  $('#noticeboard_filter_status').select2();\n  $('#noticeboard_filter_status').on('change', function (e) {\n    var data = $('#noticeboard_filter_status').select2('val');\n    window.livewire.emit('changeFilter', 'status', data);\n    $('#noticeboardsTbl').DataTable().ajax.reload();\n  });\n});\n$(document).ready(function () {\n  var table = $('#noticeboardsTbl').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: noticeboardUrl,\n      type: 'GET',\n      data: function data(_data) {\n        _data.is_active = $('#noticeboard_filter_status').find('option:selected').val();\n      }\n    },\n    columnDefs: [{\n      'targets': [3],\n      'orderable': false,\n      'className': 'text-center'\n    }, {\n      'targets': [2],\n      'orderable': false,\n      'className': 'text-center'\n    }],\n    columns: [{\n      data: function data(row) {\n        return '<a class=\"show-btn\" href=\"#\" data-id=\"' + row.id + '\">' + row.title + '</a>';\n      },\n      name: 'title'\n    }, {\n      data: function data(row) {\n        var element = document.createElement('textarea');\n        element.innerHTML = !isEmpty(row.description) ? row.description : 'N/A';\n        return element.value;\n      },\n      name: 'description'\n    }, {\n      data: function data(row) {\n        var checked = row.is_active === 0 ? '' : 'checked';\n        var data = [{\n          'id': row.id,\n          'checked': checked\n        }];\n        return prepareTemplateRender('#isActive', data);\n      },\n      name: 'id',\n      searchable: false\n    }, {\n      data: function data(row) {\n        return prepareTemplateRender('#noticeboardActionTemplate', [{\n          'id': row.id\n        }]);\n      },\n      name: 'id',\n      searchable: false\n    }],\n    'fnInitComplete': function fnInitComplete() {\n      $('#noticeboard_filter_status').change(function () {\n        $('#noticeboardsTbl').DataTable().ajax.reload(null, true);\n      });\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL25vdGljZWJvYXJkcy9ub3RpY2Vib2FyZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUNDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsWUFBWTtFQUN4REYsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUNDLEtBQUssQ0FBQyxNQUFNLENBQUM7QUFDakQsQ0FBQyxDQUFDO0FBRUZKLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUNDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsYUFBYSxFQUFFLFVBQVVHLENBQUMsRUFBRTtFQUNqREEsQ0FBQyxDQUFDQyxjQUFjLENBQUMsQ0FBQztFQUNsQixJQUFJLENBQUNDLG9CQUFvQixDQUFDLGNBQWMsRUFDcEMsZ0NBQWdDLEVBQUUsQ0FBQyxDQUFDLEVBQUU7SUFDdEMsT0FBTyxJQUFJO0VBQ2Y7RUFDQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUUsU0FBUyxDQUFDO0VBQ25EUixDQUFDLENBQUNTLElBQUksQ0FBQztJQUNIQyxHQUFHLEVBQUVDLGtCQUFrQjtJQUN2QkMsSUFBSSxFQUFFLE1BQU07SUFDWkMsSUFBSSxFQUFFYixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNjLFNBQVMsQ0FBQyxDQUFDO0lBQ3pCQyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBWUMsTUFBTSxFQUFFO01BQ3ZCLElBQUlBLE1BQU0sQ0FBQ0QsT0FBTyxFQUFFO1FBQ2hCRSxxQkFBcUIsQ0FBQ0QsTUFBTSxDQUFDRSxPQUFPLENBQUM7UUFDckNsQixDQUFDLENBQUMsV0FBVyxDQUFDLENBQUNJLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDNUI7UUFDQUosQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUNtQixTQUFTLENBQUMsQ0FBQyxDQUFDVixJQUFJLENBQUNXLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDO01BRTlEO0lBQ0osQ0FBQztJQUNEQyxLQUFLLEVBQUUsU0FBUEEsS0FBS0EsQ0FBWUwsTUFBTSxFQUFFO01BQ3JCTSxtQkFBbUIsQ0FBQ04sTUFBTSxDQUFDTyxZQUFZLENBQUNMLE9BQU8sQ0FBQztJQUNwRCxDQUFDO0lBQ0RNLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFBLEVBQWM7TUFDbEJoQixhQUFhLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQztJQUM1QztFQUNKLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGUixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVdUIsS0FBSyxFQUFFO0VBQ2xELElBQUlDLGlCQUFpQixFQUFFO0lBQ25CO0VBQ0o7RUFDQUMsa0JBQWtCLENBQUMsQ0FBQztFQUNwQixJQUFJQyxhQUFhLEdBQUc1QixDQUFDLENBQUN5QixLQUFLLENBQUNJLGFBQWEsQ0FBQyxDQUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQztFQUNyRGlCLFVBQVUsQ0FBQ0YsYUFBYSxDQUFDO0FBQzdCLENBQUMsQ0FBQztBQUVGRyxNQUFNLENBQUNELFVBQVUsR0FBRyxVQUFVRSxFQUFFLEVBQUU7RUFDOUJoQyxDQUFDLENBQUNTLElBQUksQ0FBQztJQUNIQyxHQUFHLEVBQUV1QixjQUFjLEdBQUdELEVBQUUsR0FBRyxPQUFPO0lBQ2xDcEIsSUFBSSxFQUFFLEtBQUs7SUFDWEcsT0FBTyxFQUFFLFNBQVRBLE9BQU9BLENBQVlDLE1BQU0sRUFBRTtNQUN2QixJQUFJQSxNQUFNLENBQUNELE9BQU8sRUFBRTtRQUNoQixJQUFJbUIsT0FBTyxHQUFHakMsUUFBUSxDQUFDa0MsYUFBYSxDQUFDLFVBQVUsQ0FBQztRQUNoREQsT0FBTyxDQUFDRSxTQUFTLEdBQUdwQixNQUFNLENBQUNILElBQUksQ0FBQ3dCLEtBQUs7UUFDckNyQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ3NDLEdBQUcsQ0FBQ3RCLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDbUIsRUFBRSxDQUFDO1FBQ3ZDaEMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDc0MsR0FBRyxDQUFDSixPQUFPLENBQUNLLEtBQUssQ0FBQztRQUNsQ3ZDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUNqQndDLFVBQVUsQ0FBQyxNQUFNLEVBQUV4QixNQUFNLENBQUNILElBQUksQ0FBQzRCLFdBQVcsQ0FBQztRQUM5Q3pCLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDNkIsU0FBUyxJQUFJLENBQUMsR0FBSTFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FDN0MyQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxHQUFHM0MsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUMxQzJDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO1FBQzFCM0MsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUNDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDOUN3QyxpQkFBaUIsQ0FBQyxDQUFDO01BQ3ZCO0lBQ0osQ0FBQztJQUNEdkIsS0FBSyxFQUFFLFNBQVBBLEtBQUtBLENBQVlMLE1BQU0sRUFBRTtNQUNyQk0sbUJBQW1CLENBQUNOLE1BQU0sQ0FBQ08sWUFBWSxDQUFDTCxPQUFPLENBQUM7SUFDcEQ7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDO0FBRURsQixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLFdBQVcsRUFBRSxVQUFVdUIsS0FBSyxFQUFFO0VBQ25EQSxLQUFLLENBQUNuQixjQUFjLENBQUMsQ0FBQztFQUN0QixJQUFJLENBQUNDLG9CQUFvQixDQUFDLGtCQUFrQixFQUN4QyxnQ0FBZ0MsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUN0QyxPQUFPLElBQUk7RUFDZjtFQUNBQyxhQUFhLENBQUMsV0FBVyxFQUFFLGNBQWMsRUFBRSxTQUFTLENBQUM7RUFDckQsSUFBTXdCLEVBQUUsR0FBR2hDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDc0MsR0FBRyxDQUFDLENBQUM7RUFDcEN0QyxDQUFDLENBQUNTLElBQUksQ0FBQztJQUNIQyxHQUFHLEVBQUV1QixjQUFjLEdBQUdELEVBQUU7SUFDeEJwQixJQUFJLEVBQUUsS0FBSztJQUNYQyxJQUFJLEVBQUViLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ2MsU0FBUyxDQUFDLENBQUM7SUFDekJDLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFZQyxNQUFNLEVBQUU7TUFDdkIsSUFBSUEsTUFBTSxDQUFDRCxPQUFPLEVBQUU7UUFDaEJFLHFCQUFxQixDQUFDRCxNQUFNLENBQUNFLE9BQU8sQ0FBQztRQUNyQ2xCLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQ0ksS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUM3QjtRQUNBSixDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQ21CLFNBQVMsQ0FBQyxDQUFDLENBQUNWLElBQUksQ0FBQ1csTUFBTSxDQUFDLENBQUM7TUFDbkQ7SUFDSixDQUFDO0lBQ0RDLEtBQUssRUFBRSxTQUFQQSxLQUFLQSxDQUFZTCxNQUFNLEVBQUU7TUFDckJNLG1CQUFtQixDQUFDTixNQUFNLENBQUNPLFlBQVksQ0FBQ0wsT0FBTyxDQUFDO0lBQ3BELENBQUM7SUFDRE0sUUFBUSxFQUFFLFNBQVZBLFFBQVFBLENBQUEsRUFBYztNQUNsQmhCLGFBQWEsQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDO0lBQzlDO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBRUZSLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUNDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsV0FBVyxFQUFFLFVBQVV1QixLQUFLLEVBQUU7RUFDbEQsSUFBSUMsaUJBQWlCLEVBQUU7SUFDbkI7RUFDSjtFQUNBQyxrQkFBa0IsQ0FBQyxDQUFDO0VBQ3BCLElBQUlDLGFBQWEsR0FBRzVCLENBQUMsQ0FBQ3lCLEtBQUssQ0FBQ0ksYUFBYSxDQUFDLENBQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDO0VBQ3JEYixDQUFDLENBQUNTLElBQUksQ0FBQztJQUNIQyxHQUFHLEVBQUV1QixjQUFjLEdBQUdMLGFBQWE7SUFDbkNoQixJQUFJLEVBQUUsS0FBSztJQUNYRyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBWUMsTUFBTSxFQUFFO01BQ3ZCLElBQUlBLE1BQU0sQ0FBQ0QsT0FBTyxFQUFFO1FBQ2hCZixDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM2QyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3hCN0MsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUM2QyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQzlCN0MsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDOEMsTUFBTSxDQUFDOUIsTUFBTSxDQUFDSCxJQUFJLENBQUN3QixLQUFLLENBQUM7UUFDekMsSUFBSUgsT0FBTyxHQUFHakMsUUFBUSxDQUFDa0MsYUFBYSxDQUFDLFVBQVUsQ0FBQztRQUNoREQsT0FBTyxDQUFDRSxTQUFTLEdBQUksQ0FBQ1csT0FBTyxDQUFDL0IsTUFBTSxDQUFDSCxJQUFJLENBQUM0QixXQUFXLENBQUMsR0FDaER6QixNQUFNLENBQUNILElBQUksQ0FBQzRCLFdBQVcsR0FDdkIsS0FBSztRQUNYekMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUM4QyxNQUFNLENBQUNaLE9BQU8sQ0FBQ0ssS0FBSyxDQUFDO1FBQzFDdkIsTUFBTSxDQUFDSCxJQUFJLENBQUM2QixTQUFTLEtBQUssQ0FBQyxHQUN0QjFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQzZDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FDakM3QyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUM2QyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pDN0MsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUNDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDOUN3QyxpQkFBaUIsQ0FBQyxDQUFDO01BQ3ZCO0lBQ0osQ0FBQztJQUNEdkIsS0FBSyxFQUFFLFNBQVBBLEtBQUtBLENBQVlMLE1BQU0sRUFBRTtNQUNyQk0sbUJBQW1CLENBQUNOLE1BQU0sQ0FBQ08sWUFBWSxDQUFDTCxPQUFPLENBQUM7SUFDcEQ7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDLENBQUM7QUFFRmxCLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUNDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVV1QixLQUFLLEVBQUU7RUFDcEQsSUFBSUcsYUFBYSxHQUFHNUIsQ0FBQyxDQUFDeUIsS0FBSyxDQUFDSSxhQUFhLENBQUMsQ0FBQ21CLElBQUksQ0FBQyxTQUFTLENBQUM7RUFDMURDLFVBQVUsQ0FBQ2hCLGNBQWMsR0FBR0wsYUFBYSxFQUFFLGtCQUFrQixFQUN6RHNCLElBQUksQ0FBQ0MsR0FBRyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7QUFDckQsQ0FBQyxDQUFDO0FBRUZuRCxDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLFdBQVcsRUFBRSxVQUFVdUIsS0FBSyxFQUFFO0VBQ25ELElBQUkyQixRQUFRLEdBQUdwRCxDQUFDLENBQUN5QixLQUFLLENBQUNJLGFBQWEsQ0FBQyxDQUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQztFQUNoRGIsQ0FBQyxDQUFDUyxJQUFJLENBQUM7SUFDSEMsR0FBRyxFQUFFdUIsY0FBYyxHQUFHbUIsUUFBUSxHQUFHLEdBQUcsR0FBRyxlQUFlO0lBQ3REQyxNQUFNLEVBQUUsTUFBTTtJQUNkQyxLQUFLLEVBQUUsS0FBSztJQUNadkMsT0FBTyxFQUFFLFNBQVRBLE9BQU9BLENBQVlDLE1BQU0sRUFBRTtNQUN2QixJQUFJQSxNQUFNLENBQUNELE9BQU8sRUFBRTtRQUNoQkUscUJBQXFCLENBQUNELE1BQU0sQ0FBQ0UsT0FBTyxDQUFDO1FBQ3JDO1FBQ0FsQixDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQ21CLFNBQVMsQ0FBQyxDQUFDLENBQUNWLElBQUksQ0FBQ1csTUFBTSxDQUFDLENBQUM7TUFDbkQ7SUFDSjtFQUNKLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVGcEIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDRSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsWUFBWTtFQUM3Q3FELGNBQWMsQ0FBQyxhQUFhLEVBQUUsc0JBQXNCLENBQUM7RUFDckR2RCxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUN3QyxVQUFVLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQztBQUM1QyxDQUFDLENBQUM7QUFFRnhDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQ0UsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7RUFDOUNxRCxjQUFjLENBQUMsV0FBVyxFQUFFLDBCQUEwQixDQUFDO0FBQzNELENBQUMsQ0FBQztBQUVGdkQsQ0FBQyxDQUFDLGdDQUFnQyxDQUFDLENBQUN3QyxVQUFVLENBQUM7RUFDM0NnQixTQUFTLEVBQUUsR0FBRztFQUNkQyxNQUFNLEVBQUUsR0FBRztFQUNYQyxPQUFPLEVBQUUsQ0FDTCxDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQ25ELENBQUMsTUFBTSxFQUFFLENBQUMsZUFBZSxDQUFDLENBQUMsRUFDM0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMvQixDQUFDLENBQUM7QUFFRjFELENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUMwRCxLQUFLLENBQUMsWUFBWTtFQUMxQjNELENBQUMsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDNEQsT0FBTyxDQUFDLENBQUM7RUFFekM1RCxDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQ0UsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFVRyxDQUFDLEVBQUU7SUFDdEQsSUFBSVEsSUFBSSxHQUFHYixDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQzRELE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDekQ3QixNQUFNLENBQUM4QixRQUFRLENBQUNDLElBQUksQ0FBQyxjQUFjLEVBQUUsUUFBUSxFQUFFakQsSUFBSSxDQUFDO0lBQ3BEYixDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQ21CLFNBQVMsQ0FBQyxDQUFDLENBQUNWLElBQUksQ0FBQ1csTUFBTSxDQUFDLENBQUM7RUFDbkQsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBRUZwQixDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDMEQsS0FBSyxDQUFDLFlBQVk7RUFDMUIsSUFBSUksS0FBSyxHQUFHL0QsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUNtQixTQUFTLENBQUM7SUFDeEM2QyxVQUFVLEVBQUUsSUFBSTtJQUNoQkMsVUFBVSxFQUFFLElBQUk7SUFDaEJ4RCxJQUFJLEVBQUU7TUFDRkMsR0FBRyxFQUFFdUIsY0FBYztNQUNuQnJCLElBQUksRUFBRSxLQUFLO01BQ1hDLElBQUksRUFBRSxTQUFOQSxJQUFJQSxDQUFZQSxLQUFJLEVBQUU7UUFDbEJBLEtBQUksQ0FBQzZCLFNBQVMsR0FBRzFDLENBQUMsQ0FBQyw0QkFBNEIsQ0FBQyxDQUM1Q2tFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUN2QjVCLEdBQUcsQ0FBQyxDQUFDO01BQ2I7SUFDSixDQUFDO0lBQ0Q2QixVQUFVLEVBQUUsQ0FDUjtNQUNJLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztNQUNkLFdBQVcsRUFBRSxLQUFLO01BQ2xCLFdBQVcsRUFBRTtJQUNqQixDQUFDLEVBQ0Q7TUFDSSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7TUFDZCxXQUFXLEVBQUUsS0FBSztNQUNsQixXQUFXLEVBQUU7SUFDakIsQ0FBQyxDQUNKO0lBQ0RDLE9BQU8sRUFBRSxDQUNMO01BQ0l2RCxJQUFJLEVBQUUsU0FBU0EsSUFBSUEsQ0FBRXdELEdBQUcsRUFBRTtRQUN0QixPQUFPLHdDQUF3QyxHQUFHQSxHQUFHLENBQUNyQyxFQUFFLEdBQ3BELElBQUksR0FBR3FDLEdBQUcsQ0FBQ2hDLEtBQUssR0FBRyxNQUFNO01BQ2pDLENBQUM7TUFDRGlDLElBQUksRUFBRTtJQUNWLENBQUMsRUFBRTtNQUNDekQsSUFBSSxFQUFFLFNBQVNBLElBQUlBLENBQUV3RCxHQUFHLEVBQUU7UUFDdEIsSUFBSW5DLE9BQU8sR0FBR2pDLFFBQVEsQ0FBQ2tDLGFBQWEsQ0FBQyxVQUFVLENBQUM7UUFDaERELE9BQU8sQ0FBQ0UsU0FBUyxHQUFHLENBQUNXLE9BQU8sQ0FBQ3NCLEdBQUcsQ0FBQzVCLFdBQVcsQ0FBQyxHQUN2QzRCLEdBQUcsQ0FBQzVCLFdBQVcsR0FDZixLQUFLO1FBQ1gsT0FBT1AsT0FBTyxDQUFDSyxLQUFLO01BQ3hCLENBQUM7TUFDRCtCLElBQUksRUFBRTtJQUNWLENBQUMsRUFBRTtNQUNDekQsSUFBSSxFQUFFLFNBQU5BLElBQUlBLENBQVl3RCxHQUFHLEVBQUU7UUFDakIsSUFBSUUsT0FBTyxHQUFHRixHQUFHLENBQUMzQixTQUFTLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxTQUFTO1FBQ2xELElBQUk3QixJQUFJLEdBQUcsQ0FBQztVQUFFLElBQUksRUFBRXdELEdBQUcsQ0FBQ3JDLEVBQUU7VUFBRSxTQUFTLEVBQUV1QztRQUFRLENBQUMsQ0FBQztRQUNqRCxPQUFPQyxxQkFBcUIsQ0FBQyxXQUFXLEVBQUUzRCxJQUFJLENBQUM7TUFDbkQsQ0FBQztNQUNEeUQsSUFBSSxFQUFFLElBQUk7TUFDVkcsVUFBVSxFQUFFO0lBQ2hCLENBQUMsRUFBRTtNQUNDNUQsSUFBSSxFQUFFLFNBQVNBLElBQUlBLENBQUV3RCxHQUFHLEVBQUU7UUFDdEIsT0FBT0cscUJBQXFCLENBQUMsNEJBQTRCLEVBQUUsQ0FDdkQ7VUFDSSxJQUFJLEVBQUVILEdBQUcsQ0FBQ3JDO1FBQ2QsQ0FBQyxDQUFDLENBQUM7TUFDWCxDQUFDO01BQ0RzQyxJQUFJLEVBQUUsSUFBSTtNQUNWRyxVQUFVLEVBQUU7SUFDaEIsQ0FBQyxDQUNKO0lBQ0QsZ0JBQWdCLEVBQUUsU0FBbEJDLGNBQWdCQSxDQUFBLEVBQWM7TUFDMUIxRSxDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQzJFLE1BQU0sQ0FBQyxZQUFZO1FBQy9DM0UsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUNtQixTQUFTLENBQUMsQ0FBQyxDQUFDVixJQUFJLENBQUNXLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDO01BQzdELENBQUMsQ0FBQztJQUNOO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9ub3RpY2Vib2FyZHMvbm90aWNlYm9hcmRzLmpzP2QzYmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmFkZE5vdGljZWJvYXJkTW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnI2FkZE1vZGFsJykuYXBwZW5kVG8oJ2JvZHknKS5tb2RhbCgnc2hvdycpO1xufSk7XG5cbiQoZG9jdW1lbnQpLm9uKCdzdWJtaXQnLCAnI2FkZE5ld0Zvcm0nLCBmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoIWNoZWNrU3VtbWVyTm90ZUVtcHR5KCcjZGVzY3JpcHRpb24nLFxuICAgICAgICAnRGVzY3JpcHRpb24gZmllbGQgaXMgcmVxdWlyZWQuJywgMSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHByb2Nlc3NpbmdCdG4oJyNhZGROZXdGb3JtJywgJyNidG5TYXZlJywgJ2xvYWRpbmcnKTtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IG5vdGljZWJvYXJkU2F2ZVVybCxcbiAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICBkYXRhOiAkKHRoaXMpLnNlcmlhbGl6ZSgpLFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5U3VjY2Vzc01lc3NhZ2UocmVzdWx0Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICQoJyNhZGRNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgLy93aW5kb3cubGl2ZXdpcmUuZW1pdCgncmVmcmVzaCcpO1xuICAgICAgICAgICAgICAgICQoJyNub3RpY2Vib2FyZHNUYmwnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZChudWxsLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGRpc3BsYXlFcnJvck1lc3NhZ2UocmVzdWx0LnJlc3BvbnNlSlNPTi5tZXNzYWdlKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHByb2Nlc3NpbmdCdG4oJyNhZGROZXdGb3JtJywgJyNidG5TYXZlJyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59KTtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5lZGl0LWJ0bicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGlmIChhamF4Q2FsbElzUnVubmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGFqYXhDYWxsSW5Qcm9ncmVzcygpO1xuICAgIGxldCBub3RpY2Vib2FyZElkID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKCdpZCcpO1xuICAgIHJlbmRlckRhdGEobm90aWNlYm9hcmRJZCk7XG59KTtcblxud2luZG93LnJlbmRlckRhdGEgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IG5vdGljZWJvYXJkVXJsICsgaWQgKyAnL2VkaXQnLFxuICAgICAgICB0eXBlOiAnR0VUJyxcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gcmVzdWx0LmRhdGEudGl0bGU7XG4gICAgICAgICAgICAgICAgJCgnI25vdGljZWJvYXJkSWQnKS52YWwocmVzdWx0LmRhdGEuaWQpO1xuICAgICAgICAgICAgICAgICQoJyNlZGl0VGl0bGUnKS52YWwoZWxlbWVudC52YWx1ZSk7XG4gICAgICAgICAgICAgICAgJCgnI2VkaXREZXNjcmlwdGlvbicpLlxuICAgICAgICAgICAgICAgICAgICBzdW1tZXJub3RlKCdjb2RlJywgcmVzdWx0LmRhdGEuZGVzY3JpcHRpb24pO1xuICAgICAgICAgICAgICAgIChyZXN1bHQuZGF0YS5pc19hY3RpdmUgPT0gMSkgPyAkKCcjZWRpdElzQWN0aXZlJykuXG4gICAgICAgICAgICAgICAgICAgIHByb3AoJ2NoZWNrZWQnLCB0cnVlKSA6ICQoJyNlZGl0SXNBY3RpdmUnKS5cbiAgICAgICAgICAgICAgICAgICAgcHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAkKCcjZWRpdE1vZGFsJykuYXBwZW5kVG8oJ2JvZHknKS5tb2RhbCgnc2hvdycpO1xuICAgICAgICAgICAgICAgIGFqYXhDYWxsQ29tcGxldGVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBkaXNwbGF5RXJyb3JNZXNzYWdlKHJlc3VsdC5yZXNwb25zZUpTT04ubWVzc2FnZSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59O1xuXG4kKGRvY3VtZW50KS5vbignc3VibWl0JywgJyNlZGl0Rm9ybScsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKCFjaGVja1N1bW1lck5vdGVFbXB0eSgnI2VkaXREZXNjcmlwdGlvbicsXG4gICAgICAgICdEZXNjcmlwdGlvbiBmaWVsZCBpcyByZXF1aXJlZC4nLCAxKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcHJvY2Vzc2luZ0J0bignI2VkaXRGb3JtJywgJyNidG5FZGl0U2F2ZScsICdsb2FkaW5nJyk7XG4gICAgY29uc3QgaWQgPSAkKCcjbm90aWNlYm9hcmRJZCcpLnZhbCgpO1xuICAgICQuYWpheCh7XG4gICAgICAgIHVybDogbm90aWNlYm9hcmRVcmwgKyBpZCxcbiAgICAgICAgdHlwZTogJ3B1dCcsXG4gICAgICAgIGRhdGE6ICQodGhpcykuc2VyaWFsaXplKCksXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIGRpc3BsYXlTdWNjZXNzTWVzc2FnZShyZXN1bHQubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgJCgnI2VkaXRNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgLy93aW5kb3cubGl2ZXdpcmUuZW1pdCgncmVmcmVzaCcpO1xuICAgICAgICAgICAgICAgICQoJyNub3RpY2Vib2FyZHNUYmwnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgZGlzcGxheUVycm9yTWVzc2FnZShyZXN1bHQucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICAgICAgICB9LFxuICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcHJvY2Vzc2luZ0J0bignI2VkaXRGb3JtJywgJyNidG5FZGl0U2F2ZScpO1xuICAgICAgICB9LFxuICAgIH0pO1xufSk7XG5cbiQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuc2hvdy1idG4nLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBpZiAoYWpheENhbGxJc1J1bm5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBhamF4Q2FsbEluUHJvZ3Jlc3MoKTtcbiAgICBsZXQgbm90aWNlYm9hcmRJZCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YSgnaWQnKTtcbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IG5vdGljZWJvYXJkVXJsICsgbm90aWNlYm9hcmRJZCxcbiAgICAgICAgdHlwZTogJ0dFVCcsXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICQoJyNzaG93VGl0bGUnKS5odG1sKCcnKTtcbiAgICAgICAgICAgICAgICAkKCcjc2hvd0Rlc2NyaXB0aW9uJykuaHRtbCgnJyk7XG4gICAgICAgICAgICAgICAgJCgnI3Nob3dUaXRsZScpLmFwcGVuZChyZXN1bHQuZGF0YS50aXRsZSk7XG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gKCFpc0VtcHR5KHJlc3VsdC5kYXRhLmRlc2NyaXB0aW9uKSlcbiAgICAgICAgICAgICAgICAgICAgPyByZXN1bHQuZGF0YS5kZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgICAgICA6ICdOL0EnO1xuICAgICAgICAgICAgICAgICQoJyNzaG93RGVzY3JpcHRpb24nKS5hcHBlbmQoZWxlbWVudC52YWx1ZSk7XG4gICAgICAgICAgICAgICAgKHJlc3VsdC5kYXRhLmlzX2FjdGl2ZSA9PT0gMSlcbiAgICAgICAgICAgICAgICAgICAgPyAkKCcjc2hvd0lzQWN0aXZlJykuaHRtbCgnQWN0aXZlJylcbiAgICAgICAgICAgICAgICAgICAgOiAkKCcjc2hvd0lzQWN0aXZlJykuaHRtbCgnRGVhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAkKCcjc2hvd01vZGFsJykuYXBwZW5kVG8oJ2JvZHknKS5tb2RhbCgnc2hvdycpO1xuICAgICAgICAgICAgICAgIGFqYXhDYWxsQ29tcGxldGVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBkaXNwbGF5RXJyb3JNZXNzYWdlKHJlc3VsdC5yZXNwb25zZUpTT04ubWVzc2FnZSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59KTtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5kZWxldGUtYnRuJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgbGV0IG5vdGljZWJvYXJkSWQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2RhdGEtaWQnKTtcbiAgICBkZWxldGVJdGVtKG5vdGljZWJvYXJkVXJsICsgbm90aWNlYm9hcmRJZCwgJyNub3RpY2Vib2FyZHNUYmwnLFxuICAgICAgICBMYW5nLmdldCgnbWVzc2FnZXMubm90aWNlYm9hcmQubm90aWNlYm9hcmQnKSk7XG59KTtcblxuJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuaXNBY3RpdmUnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBsZXQgbm90aWNlSWQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2lkJyk7XG4gICAgJC5hamF4KHtcbiAgICAgICAgdXJsOiBub3RpY2Vib2FyZFVybCArIG5vdGljZUlkICsgJy8nICsgJ2NoYW5nZS1zdGF0dXMnLFxuICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5U3VjY2Vzc01lc3NhZ2UocmVzdWx0Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIC8vd2luZG93LmxpdmV3aXJlLmVtaXQoJ3JlZnJlc2gnKTtcbiAgICAgICAgICAgICAgICAkKCcjbm90aWNlYm9hcmRzVGJsJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn0pO1xuXG4kKCcjYWRkTW9kYWwnKS5vbignaGlkZGVuLmJzLm1vZGFsJywgZnVuY3Rpb24gKCkge1xuICAgIHJlc2V0TW9kYWxGb3JtKCcjYWRkTmV3Rm9ybScsICcjdmFsaWRhdGlvbkVycm9yc0JveCcpO1xuICAgICQoJyNkZXNjcmlwdGlvbicpLnN1bW1lcm5vdGUoJ2NvZGUnLCAnJyk7XG59KTtcblxuJCgnI2VkaXRNb2RhbCcpLm9uKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmVzZXRNb2RhbEZvcm0oJyNlZGl0Rm9ybScsICcjZWRpdFZhbGlkYXRpb25FcnJvcnNCb3gnKTtcbn0pO1xuXG4kKCcjZGVzY3JpcHRpb24sICNlZGl0RGVzY3JpcHRpb24nKS5zdW1tZXJub3RlKHtcbiAgICBtaW5IZWlnaHQ6IDIwMCxcbiAgICBoZWlnaHQ6IDIwMCxcbiAgICB0b29sYmFyOiBbXG4gICAgICAgIFsnc3R5bGUnLCBbJ2JvbGQnLCAnaXRhbGljJywgJ3VuZGVybGluZScsICdjbGVhciddXSxcbiAgICAgICAgWydmb250JywgWydzdHJpa2V0aHJvdWdoJ11dLFxuICAgICAgICBbJ3BhcmEnLCBbJ3BhcmFncmFwaCddXV0sXG59KTtcblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICQoJyNub3RpY2Vib2FyZF9maWx0ZXJfc3RhdHVzJykuc2VsZWN0MigpO1xuXG4gICAgJCgnI25vdGljZWJvYXJkX2ZpbHRlcl9zdGF0dXMnKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbGV0IGRhdGEgPSAkKCcjbm90aWNlYm9hcmRfZmlsdGVyX3N0YXR1cycpLnNlbGVjdDIoJ3ZhbCcpO1xuICAgICAgICB3aW5kb3cubGl2ZXdpcmUuZW1pdCgnY2hhbmdlRmlsdGVyJywgJ3N0YXR1cycsIGRhdGEpO1xuICAgICAgICAkKCcjbm90aWNlYm9hcmRzVGJsJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTtcbiAgICB9KTtcbn0pO1xuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRhYmxlID0gJCgnI25vdGljZWJvYXJkc1RibCcpLkRhdGFUYWJsZSh7XG4gICAgICAgIHByb2Nlc3Npbmc6IHRydWUsXG4gICAgICAgIHNlcnZlclNpZGU6IHRydWUsXG4gICAgICAgIGFqYXg6IHtcbiAgICAgICAgICAgIHVybDogbm90aWNlYm9hcmRVcmwsXG4gICAgICAgICAgICB0eXBlOiAnR0VUJyxcbiAgICAgICAgICAgIGRhdGE6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgZGF0YS5pc19hY3RpdmUgPSAkKCcjbm90aWNlYm9hcmRfZmlsdGVyX3N0YXR1cycpLlxuICAgICAgICAgICAgICAgICAgICBmaW5kKCdvcHRpb246c2VsZWN0ZWQnKS5cbiAgICAgICAgICAgICAgICAgICAgdmFsKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBjb2x1bW5EZWZzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgJ3RhcmdldHMnOiBbM10sXG4gICAgICAgICAgICAgICAgJ29yZGVyYWJsZSc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICdjbGFzc05hbWUnOiAndGV4dC1jZW50ZXInLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAndGFyZ2V0cyc6IFsyXSxcbiAgICAgICAgICAgICAgICAnb3JkZXJhYmxlJzogZmFsc2UsXG4gICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICd0ZXh0LWNlbnRlcicsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBjb2x1bW5zOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YSAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnPGEgY2xhc3M9XCJzaG93LWJ0blwiIGhyZWY9XCIjXCIgZGF0YS1pZD1cIicgKyByb3cuaWQgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1wiPicgKyByb3cudGl0bGUgKyAnPC9hPic7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBuYW1lOiAndGl0bGUnLFxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEgKHJvdykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gIWlzRW1wdHkocm93LmRlc2NyaXB0aW9uKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyByb3cuZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgIDogJ04vQSc7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50LnZhbHVlO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbmFtZTogJ2Rlc2NyaXB0aW9uJyxcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBkYXRhOiBmdW5jdGlvbiAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjaGVja2VkID0gcm93LmlzX2FjdGl2ZSA9PT0gMCA/ICcnIDogJ2NoZWNrZWQnO1xuICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IFt7ICdpZCc6IHJvdy5pZCwgJ2NoZWNrZWQnOiBjaGVja2VkIH1dO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJlcGFyZVRlbXBsYXRlUmVuZGVyKCcjaXNBY3RpdmUnLCBkYXRhKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG5hbWU6ICdpZCcsXG4gICAgICAgICAgICAgICAgc2VhcmNoYWJsZTogZmFsc2UsXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YSAocm93KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcmVwYXJlVGVtcGxhdGVSZW5kZXIoJyNub3RpY2Vib2FyZEFjdGlvblRlbXBsYXRlJywgW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCc6IHJvdy5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG5hbWU6ICdpZCcsXG4gICAgICAgICAgICAgICAgc2VhcmNoYWJsZTogZmFsc2UsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICAnZm5Jbml0Q29tcGxldGUnOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCcjbm90aWNlYm9hcmRfZmlsdGVyX3N0YXR1cycpLmNoYW5nZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJCgnI25vdGljZWJvYXJkc1RibCcpLkRhdGFUYWJsZSgpLmFqYXgucmVsb2FkKG51bGwsIHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJvbiIsImFwcGVuZFRvIiwibW9kYWwiLCJlIiwicHJldmVudERlZmF1bHQiLCJjaGVja1N1bW1lck5vdGVFbXB0eSIsInByb2Nlc3NpbmdCdG4iLCJhamF4IiwidXJsIiwibm90aWNlYm9hcmRTYXZlVXJsIiwidHlwZSIsImRhdGEiLCJzZXJpYWxpemUiLCJzdWNjZXNzIiwicmVzdWx0IiwiZGlzcGxheVN1Y2Nlc3NNZXNzYWdlIiwibWVzc2FnZSIsIkRhdGFUYWJsZSIsInJlbG9hZCIsImVycm9yIiwiZGlzcGxheUVycm9yTWVzc2FnZSIsInJlc3BvbnNlSlNPTiIsImNvbXBsZXRlIiwiZXZlbnQiLCJhamF4Q2FsbElzUnVubmluZyIsImFqYXhDYWxsSW5Qcm9ncmVzcyIsIm5vdGljZWJvYXJkSWQiLCJjdXJyZW50VGFyZ2V0IiwicmVuZGVyRGF0YSIsIndpbmRvdyIsImlkIiwibm90aWNlYm9hcmRVcmwiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsInRpdGxlIiwidmFsIiwidmFsdWUiLCJzdW1tZXJub3RlIiwiZGVzY3JpcHRpb24iLCJpc19hY3RpdmUiLCJwcm9wIiwiYWpheENhbGxDb21wbGV0ZWQiLCJodG1sIiwiYXBwZW5kIiwiaXNFbXB0eSIsImF0dHIiLCJkZWxldGVJdGVtIiwiTGFuZyIsImdldCIsIm5vdGljZUlkIiwibWV0aG9kIiwiY2FjaGUiLCJyZXNldE1vZGFsRm9ybSIsIm1pbkhlaWdodCIsImhlaWdodCIsInRvb2xiYXIiLCJyZWFkeSIsInNlbGVjdDIiLCJsaXZld2lyZSIsImVtaXQiLCJ0YWJsZSIsInByb2Nlc3NpbmciLCJzZXJ2ZXJTaWRlIiwiZmluZCIsImNvbHVtbkRlZnMiLCJjb2x1bW5zIiwicm93IiwibmFtZSIsImNoZWNrZWQiLCJwcmVwYXJlVGVtcGxhdGVSZW5kZXIiLCJzZWFyY2hhYmxlIiwiZm5Jbml0Q29tcGxldGUiLCJjaGFuZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/noticeboards/noticeboards.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/noticeboards/noticeboards.js"]();
/******/ 	
/******/ })()
;