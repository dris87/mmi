/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/user_profile/user_profile.js":
/*!**********************************************************!*\
  !*** ./resources/assets/js/user_profile/user_profile.js ***!
  \**********************************************************/
/***/ (() => {

eval("\n\n$(document).on('submit', '#editProfileForm', function (event) {\n  event.preventDefault();\n  if ($('#profileErrorMsg').text() !== '') {\n    $('#profilePhone').focus();\n    return false;\n  }\n  var loadingButton = jQuery(this).find('#btnPrEditSave');\n  loadingButton.button('loading');\n  $.ajax({\n    url: profileUpdateUrl,\n    type: 'post',\n    data: new FormData($(this)[0]),\n    processData: false,\n    contentType: false,\n    success: function success(result) {\n      displaySuccessMessage(result.message);\n      $('#editProfileModal').modal('hide');\n      location.reload();\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      loadingButton.button('reset');\n    }\n  });\n});\n$('#changePasswordModal').on('shown.bs.modal', function () {\n  $(this).find('[autofocus]').focus();\n});\n$(document).on('submit', '#changePasswordForm', function (event) {\n  event.preventDefault();\n  var isValidate = validatePassword();\n  console.log(isValidate);\n  if (!isValidate) {\n    return false;\n  }\n  var loadingButton = jQuery(this).find('#btnPrPasswordEditSave');\n  loadingButton.button('loading');\n  $.ajax({\n    url: changePasswordUrl,\n    type: 'post',\n    data: new FormData($(this)[0]),\n    processData: false,\n    contentType: false,\n    success: function success(result) {\n      if (result.success) {\n        $('#changePasswordModal').modal('hide');\n        displaySuccessMessage(result.message);\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      loadingButton.button('reset');\n    }\n  });\n});\n$('#editProfileModal').on('hidden.bs.modal', function () {\n  resetModalForm('#editProfileForm', '#profilePictureValidationErrorsBox');\n  reset();\n  $('#btnPrEditSave').prop('disabled', false);\n});\n$('#changeLanguageModal').on('hide.bs.modal', function () {\n  resetModalForm('#changeLanguageForm', '#editProfileValidationErrorsBox');\n  $('#language').trigger('change.select2');\n});\n// open edit user profile model\n$(document).on('click', '.editProfileModal', function (event) {\n  renderProfileData();\n});\nwindow.renderProfileData = function () {\n  $.ajax({\n    url: profileUrl,\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        var user = result.data;\n        $('#editUserId').val(user.id);\n        $('#firstName').val(user.first_name);\n        $('#lastName').val(user.last_name);\n        $('#userEmail').val(user.email);\n        $('#profilePhone').val(user.phone);\n        $('#profilePicturePreview').attr('src', user.avatar);\n        $('#editProfileModal').appendTo('body').modal('show');\n      }\n    }\n  });\n};\n$(document).on('change', '#profilePicture', function () {\n  var validFile = isValidFile($(this), '#profilePictureValidationErrorsBox');\n  if (validFile) {\n    validatePhoto(this, '#profilePicturePreview');\n    $('#btnPrEditSave').prop('disabled', false);\n  } else {\n    $('#btnPrEditSave').prop('disabled', true);\n  }\n});\nwindow.validatePhoto = function (input, selector) {\n  var displayPreview = true;\n  if (input.files && input.files[0]) {\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      var image = new Image();\n      image.src = e.target.result;\n      image.onload = function () {\n        if (image.height / image.width !== 1) {\n          $('#profilePictureValidationErrorsBox').removeClass('d-none');\n          $('#profilePictureValidationErrorsBox').html(Lang.get('messages.common.image_aspect_ratio')).show();\n          $('#btnPrEditSave').prop('disabled', true);\n          return false;\n        }\n        $(selector).attr('src', e.target.result);\n        displayPreview = true;\n      };\n    };\n    if (displayPreview) {\n      reader.readAsDataURL(input.files[0]);\n      $(selector).show();\n    }\n  }\n};\nwindow.isValidFile = function (inputSelector, validationMessageSelector) {\n  var ext = $(inputSelector).val().split('.').pop().toLowerCase();\n  if ($.inArray(ext, ['png', 'jpg', 'jpeg']) == -1) {\n    $(inputSelector).val('');\n    $(validationMessageSelector).removeClass('d-none');\n    $(validationMessageSelector).html(Lang.get('messages.common.image_file_type')).show();\n    $(validationMessageSelector).delay(5000).slideUp(300);\n    return false;\n  }\n  $(validationMessageSelector).hide();\n  return true;\n};\n$('#changePasswordModal').on('hidden.bs.modal', function () {\n  resetModalForm('#changePasswordForm', '#editPasswordValidationErrorsBox');\n});\nfunction validatePassword() {\n  var currentPassword = $('#pfCurrentPassword').val().trim();\n  var password = $('#pfNewPassword').val().trim();\n  var confirmPassword = $('#pfNewConfirmPassword').val().trim();\n  if (currentPassword == '' || password == '' || confirmPassword == '') {\n    $('#editPasswordValidationErrorsBox').show().html(Lang.get('messages.user.required_field_messages'));\n    return false;\n  }\n  return true;\n}\n$(document).on('submit', '#changeLanguageForm', function (event) {\n  event.preventDefault();\n  var loadingButton = jQuery(this).find('#btnLanguageChange');\n  loadingButton.button('loading');\n  $.ajax({\n    url: updateLanguageURL,\n    type: 'post',\n    data: new FormData($(this)[0]),\n    processData: false,\n    contentType: false,\n    success: function success(result) {\n      $('#changePasswordModal').modal('hide');\n      displaySuccessMessage(result.message);\n      setTimeout(function () {\n        location.reload();\n      }, 1500);\n    },\n    error: function error(result) {\n      manageAjaxErrors(result, 'editProfileValidationErrorsBox');\n    },\n    complete: function complete() {\n      loadingButton.button('reset');\n    }\n  });\n});\n$(document).on('click', '.changePasswordModal', function () {\n  $('#changePasswordModal').appendTo('body').modal('show');\n});\n$(document).on('click', '.changeLanguageModal', function () {\n  $('#changeLanguageModal').appendTo('body').modal('show');\n});\n$(document).ready(function () {\n  $('#language').select2({\n    width: '100%'\n  });\n});\nvar input = document.querySelector('#profilePhone'),\n  profileErrorMsg = document.querySelector('#profileErrorMsg'),\n  profileValidMsg = document.querySelector('#profileValidMsg');\nvar errorMap = ['Invalid number', 'Invalid country code', 'Too short', 'Too long', 'Invalid number'];\n\n// initialise plugin\nvar intl = window.intlTelInput(input, {\n  initialCountry: 'auto',\n  separateDialCode: true,\n  geoIpLookup: function geoIpLookup(success, failure) {\n    $.get('https://ipinfo.io', function () {}, 'jsonp').always(function (resp) {\n      var countryCode = resp && resp.country ? resp.country : '';\n      success(countryCode);\n    });\n  },\n  utilsScript: utilsScript\n});\nvar reset = function reset() {\n  input.classList.remove('error');\n  profileErrorMsg.innerHTML = '';\n  profileErrorMsg.classList.add('hide');\n  profileValidMsg.classList.add('hide');\n};\ninput.addEventListener('blur', function () {\n  reset();\n  if (input.value.trim()) {\n    if (intl.isValidNumber()) {\n      profileValidMsg.classList.remove('hide');\n    } else {\n      input.classList.add('error');\n      var errorCode = intl.getValidationError();\n      profileErrorMsg.innerHTML = errorMap[errorCode];\n      profileErrorMsg.classList.remove('hide');\n    }\n  }\n});\n\n// on keyup / change flag: reset\ninput.addEventListener('change', reset);\ninput.addEventListener('keyup', reset);\nif (typeof profilePhoneNo != 'undefined' && profilePhoneNo !== '') {\n  setTimeout(function () {\n    $('#profilePhone').trigger('change');\n  }, 500);\n}\n$('#profilePhone').on('blur keyup change countrychange', function () {\n  if (typeof profilePhoneNo != 'undefined' && profilePhoneNo !== '') {\n    intl.setNumber('+' + profilePhoneNo);\n    profilePhoneNo = '';\n  }\n  var getCode = intl.selectedCountryData['dialCode'];\n  $('#profilePrefixCode').val(getCode);\n});\n\n// if (isEdit) {\nvar getCode = intl.selectedCountryData['dialCode'];\n$('#profilePrefixCode').val(getCode);\n// }\n\nvar getProfilePhone = $('#profilePhone').val();\nvar removeSpaceProfilePhone = getProfilePhone.replace(/\\s/g, '');\n$('#profilePhone').val(removeSpaceProfilePhone);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/user_profile/user_profile.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/user_profile/user_profile.js"]();
/******/ 	
/******/ })()
;