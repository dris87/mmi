/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/post_comments/post_comments.js":
/*!************************************************************!*\
  !*** ./resources/assets/js/post_comments/post_comments.js ***!
  \************************************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  var table = $('#postCommentsTbl').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: postCommentsUrl,\n      type: 'GET'\n    },\n    columnDefs: [{\n      'targets': [4],\n      'orderable': false,\n      'className': 'text-center',\n      'width': '5%'\n    }, {\n      'targets': [5],\n      'visible': false\n    }],\n    columns: [{\n      data: function data(row) {\n        var element = document.createElement('textarea');\n        element.innerHTML = row.post.title;\n        return '<a href=\"/posts/details/' + row.post.id + '\">' + element.value + '</a>';\n      },\n      name: 'post.title'\n    }, {\n      data: function data(row) {\n        var element = document.createElement('textarea');\n        var email = document.createElement('textarea');\n        element.innerHTML = row.name;\n        email.innerHTML = row.email;\n        return '<b>' + element.value + '</b><br><p>' + email.value + '</p>';\n      },\n      name: 'name'\n    }, {\n      data: function data(row) {\n        var comment = row.comment;\n        var commentLen = row.comment.length;\n        if (commentLen > 50) {\n          return comment.substr(0, 50) + '...';\n        }\n        return row.comment;\n      },\n      name: 'comment'\n    }, {\n      data: function data(row) {\n        return moment(row.created_at, 'YYYY-MM-DD hh:mm:ss').format('Do MMM, YYYY');\n      },\n      name: 'created_at'\n    }, {\n      data: function data(row) {\n        return prepareTemplateRender('#postCommentsActionTemplate', [{\n          'id': row.id\n        }]);\n      },\n      name: 'id'\n    }, {\n      data: function data() {\n        return '';\n      },\n      name: 'email'\n    }]\n  });\n});\n$(document).on('click', '.delete-btn', function (event) {\n  var jobId = $(event.currentTarget).data('id');\n  deleteItem(deleteComment + '/' + jobId, '#postCommentsTbl', Lang.get('messages.post_comment.post_comment'));\n});\n$(document).on('click', '.show-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var commentId = $(event.currentTarget).attr('data-id');\n  $.ajax({\n    url: showComment + '/' + commentId,\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        $('#postTitle,#postComment,#postUser,#postEmail,#postCreatedOn').html('');\n        $('#postTitle').append(result.data.post.title);\n        $('#postComment').append(result.data.comment);\n        $('#postUser').append(result.data.name);\n        $('#postEmail').append(result.data.email);\n        var created_on = moment(result.data.created_at).fromNow();\n        $('#postCreatedOn').append(created_on);\n        $('#showModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/post_comments/post_comments.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/post_comments/post_comments.js"]();
/******/ 	
/******/ })()
;