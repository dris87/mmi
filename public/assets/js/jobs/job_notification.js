/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/jobs/job_notification.js":
/*!******************************************************!*\
  !*** ./resources/assets/js/jobs/job_notification.js ***!
  \******************************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  'use strict';\n\n  $('#candidateId').select2({\n    placeholder: 'Select Candidate'\n  });\n  $('#filter_employers').select2();\n  checkBoxSelect();\n\n  //select all checkbox\n  function checkBoxSelect() {\n    $('#ckbCheckAll').click(function () {\n      $('.jobCheck').prop('checked', $(this).prop('checked'));\n    });\n    $('.jobCheck').on('click', function () {\n      if ($('.jobCheck:checked').length == $('.jobCheck').length) {\n        $('#ckbCheckAll').prop('checked', true);\n      } else {\n        $('#ckbCheckAll').prop('checked', false);\n      }\n    });\n  }\n\n  //employer\n  $(document).on('change', '#filter_employers', function () {\n    $('.job-notification-ul').empty();\n    $('#ckbCheckAll').prop('checked', false);\n    var url = '';\n    var employerId = $(this).val();\n    if (!isEmpty(employerId)) {\n      url = getEmployerJobs + '/' + employerId;\n    } else {\n      url = jobNotification;\n    }\n    $.ajax({\n      url: url,\n      type: 'get',\n      success: function success(result) {\n        if (result.success) {\n          var _jobNotification = '';\n          var noJobsAvailable = '<li class=\"no-job-available\"><h4>No Jobs available</h4></li>';\n          if (!isEmpty(employerId)) {\n            var index;\n            if (result.data.jobs.length > 0) {\n              for (index = 0; index < result.data.jobs.length; ++index) {\n                var data = [{\n                  'job_id': result.data.jobs[index].id,\n                  'job_title': result.data.jobs[index].job_title,\n                  'created_by': humanReadableFormatDate(result.data.jobs[index].created_at),\n                  'jobDetails': jobDetails + '/' + result.data.jobs[index].id\n                }];\n                var jobNotificationLi = prepareTemplateRender('#jobNotificationTemplate', data);\n                _jobNotification += jobNotificationLi;\n              }\n            }\n          } else {\n            if (result.data.length > 0) {\n              var count;\n              for (count = 0; count < result.data.length; ++count) {\n                var _data = [{\n                  'job_id': result.data[count].id,\n                  'job_title': result.data[count].job_title,\n                  'created_by': humanReadableFormatDate(result.data[count].created_at),\n                  'jobDetails': jobDetails + '/' + result.data[count].id\n                }];\n                var jobLi = prepareTemplateRender('#jobNotificationTemplate', _data);\n                _jobNotification += jobLi;\n              }\n            }\n          }\n          $('.job-notification-ul').append(_jobNotification != '' ? _jobNotification : noJobsAvailable);\n          checkBoxSelect();\n        }\n      },\n      error: function error(result) {\n        manageAjaxErrors(result);\n      }\n    });\n  });\n  function humanReadableFormatDate(date) {\n    return moment(date).fromNow();\n  }\n  ;\n  $(document).on('submit', '#createJobNotificationForm', function () {\n    if ($('.jobCheck:checked').length === 0) {\n      displayErrorMessage('Please select at job.');\n      return false;\n    }\n    screenLock();\n    startLoader();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/jobs/job_notification.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/jobs/job_notification.js"]();
/******/ 	
/******/ })()
;