/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/jobs/jobs.js":
/*!******************************************!*\
  !*** ./resources/assets/js/jobs/jobs.js ***!
  \******************************************/
/***/ (() => {

eval("\n\nvar tableName = '#jobsTbl';\n$(tableName).DataTable({\n  processing: true,\n  serverSide: true,\n  'order': [[0, 'asc']],\n  ajax: {\n    url: jobsUrl,\n    data: function data(_data) {\n      _data.is_featured = $('#filter_featured').find('option:selected').val();\n      _data.status = $('#filter_status').find('option:selected').val();\n    }\n  },\n  columnDefs: [{\n    'targets': [0],\n    'width': '25%'\n  }, {\n    'targets': [1],\n    'width': '10%'\n  }, {\n    'targets': [2],\n    'className': 'text-right',\n    'width': '20%'\n  }, {\n    'targets': [3],\n    'orderable': false,\n    'className': 'text-center',\n    'width': '15%'\n  }, {\n    'targets': [4],\n    'orderable': false,\n    'className': 'text-center',\n    'width': '15%'\n  }, {\n    'targets': [5],\n    'orderable': false,\n    'className': 'text-center',\n    'width': '15%'\n  }],\n  columns: [{\n    data: function data(row) {\n      var element = document.createElement('textarea');\n      element.innerHTML = row.job_title;\n      return '<a href=\"' + frontJobDetail + '/' + row.job_id + '\" target=\"_blank\">' + element.value + '</a>';\n    },\n    name: 'job_title'\n  }, {\n    data: function data(row) {\n      var currentDate = moment().format('YYYY-MM-DD');\n      var expiryDate = moment(row.job_expiry_date).format('YYYY-MM-DD');\n      if (currentDate > expiryDate) return '<div class=\"badge badge-danger\">' + moment(row.job_expiry_date, 'YYYY-MM-DD hh:mm:ss').format('Do MMM, YYYY') + '</div>';\n      return '<div class=\"badge badge-primary\">' + moment(row.job_expiry_date, 'YYYY-MM-DD hh:mm:ss').format('Do MMM, YYYY') + '</div>';\n    },\n    name: 'job_expiry_date'\n  }, {\n    data: function data(row) {\n      return '<div class=\"badge badge-primary\">' + +row.applied_jobs.length + '</div>';\n    },\n    name: 'id'\n  }, {\n    data: function data(row) {\n      var featured = row.active_featured;\n      var expiryDate;\n      if (featured) {\n        expiryDate = moment(featured.end_time).format('YYYY-MM-DD');\n      }\n      var data = [{\n        'id': row.id,\n        'featured': featured,\n        'expiryDate': expiryDate,\n        'isFeaturedEnable': isFeaturedEnable == 1 ? true : false,\n        'isFeaturedAvilabal': isFeaturedAvilabal,\n        'isJobLive': row.status == 1 ? true : false\n      }];\n      var todayDate = new Date().toISOString().split('T')[0];\n      if (todayDate > row.job_expiry_date) {\n        return '<i class=\"font-20 fas fa-times-circle text-danger\"></i>';\n      }\n      return prepareTemplateRender('#feauredJobTemplate', data);\n    },\n    name: 'hide_salary'\n  }, {\n    data: function data(row) {\n      var isJobClosed = false;\n      if (row.status == 2) {\n        isJobClosed = true;\n      }\n      var statusColor = {\n        '0': 'dark',\n        '1': 'success',\n        '2': 'warning',\n        '3': 'primary'\n      };\n      var data = [{\n        'status': statusArray[row.status],\n        'statusColor': statusColor[row.status],\n        'isJobClosed': isJobClosed,\n        'id': row.id\n      }];\n      return prepareTemplateRender('#jobStatusActionTemplate', data);\n    },\n    name: 'id'\n  }, {\n    data: function data(row) {\n      var url = jobsUrl + '/' + row.id;\n      var isJobClosed = false;\n      var isJobPause = false;\n      var isJobDraft = false;\n      if (row.status == 2) {\n        isJobClosed = true;\n      }\n      if (row.status == 3) {\n        isJobPause = true;\n      }\n      if (row.status == 0) {\n        isJobDraft = true;\n      }\n      var data = [{\n        'id': row.id,\n        'url': url + '/edit',\n        'isJobClosed': isJobClosed,\n        'isJobPause': isJobPause,\n        'isJobDraft': isJobDraft,\n        'jobApplicationUrl': url + '/applications',\n        'jobId': row.job_id\n      }];\n      return prepareTemplateRender('#jobActionTemplate', data);\n    },\n    name: 'id'\n  }],\n  'fnInitComplete': function fnInitComplete() {\n    $('#filter_featured,#filter_status').change(function () {\n      $(tableName).DataTable().ajax.reload(null, true);\n    });\n  }\n});\n$(document).ready(function () {\n  $('#filter_featured').select2({\n    width: '170px'\n  });\n  $('#filter_status').select2({\n    width: '150px'\n  });\n});\n$(document).on('click', '.delete-btn', function (event) {\n  var jobId = $(event.currentTarget).data('id');\n  deleteItem(jobsUrl + '/' + jobId, tableName, Lang.get('messages.job.job'));\n});\n$(document).on('click', '.change-status', function (event) {\n  var jobId = $(this).data('id');\n  var jobStatus = statusArray.indexOf($(this).data('option'));\n  swal({\n    title: 'Attention !',\n    text: 'Are you sure want to change the status?',\n    type: 'info',\n    showCancelButton: true,\n    closeOnConfirm: false,\n    showLoaderOnConfirm: true,\n    confirmButtonColor: '#6777ef',\n    cancelButtonColor: '#d33',\n    cancelButtonText: Lang.get('messages.common.no'),\n    confirmButtonText: Lang.get('messages.common.yes')\n  }, function () {\n    changeStatus(jobId, jobStatus);\n  });\n});\nwindow.changeStatus = function (id, jobStatus) {\n  $.ajax({\n    url: jobStatusUrl + id + '/status/' + jobStatus,\n    method: 'get',\n    cache: false,\n    success: function success(result) {\n      if (result.success) {\n        $(tableName).DataTable().ajax.reload(null, false);\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      swal.close();\n    }\n  });\n};\n$(document).on('click', '.copy-btn', function (event) {\n  var id = $(event.currentTarget).data('job-id');\n  var copyUrl = frontJobDetail + '/' + id;\n  var $temp = $('<input>');\n  $('body').append($temp);\n  $temp.val(copyUrl).select();\n  document.execCommand('copy');\n  $temp.remove();\n  displaySuccessMessage('Link Copied Successfully.');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/jobs/jobs.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/jobs/jobs.js"]();
/******/ 	
/******/ })()
;