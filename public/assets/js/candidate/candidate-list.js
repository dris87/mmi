/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/candidate/candidate-list.js":
/*!*********************************************************!*\
  !*** ./resources/assets/js/candidate/candidate-list.js ***!
  \*********************************************************/
/***/ (() => {

eval("\n\n$(document).ready(function () {\n  $('#filter_status').select2({\n    width: '100%'\n  });\n  $('#immediateAvailable').select2({\n    width: '100%'\n  });\n  $('#jobSkills').select2({\n    width: '100%'\n  });\n});\n$(document).on('click', '.delete-btn', function (event) {\n  var candidateId = $(event.currentTarget).attr('data-id');\n  swal({\n    title: Lang.get('messages.common.delete'),\n    text: Lang.get('messages.common.are_you_sure_want_to_delete') + '\"' + Lang.get('messages.notification_settings.candidate') + '\" ?',\n    type: 'warning',\n    showCancelButton: true,\n    closeOnConfirm: false,\n    showLoaderOnConfirm: true,\n    confirmButtonColor: '#6777ef',\n    cancelButtonColor: '#d33',\n    cancelButtonText: Lang.get('messages.common.no'),\n    confirmButtonText: Lang.get('messages.common.yes')\n  }, function () {\n    window.livewire.emit('deleteCandidate', candidateId);\n  });\n});\ndocument.addEventListener('delete', function () {\n  swal({\n    title: Lang.get('messages.common.deleted'),\n    text: Lang.get('messages.notification_settings.candidate') + Lang.get('messages.common.has_been_deleted'),\n    type: 'success',\n    confirmButtonColor: '#6777ef',\n    timer: 2000\n  });\n});\n$(document).on('change', '.isActive', function (event) {\n  var candidateId = $(event.currentTarget).data('id');\n  $.ajax({\n    url: candidateUrl + '/' + candidateId + '/' + 'change-status',\n    method: 'post',\n    cache: false,\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});\n$(document).on('change', '.is-candidate-email-verified', function (event) {\n  if ($(this).is(':checked')) {\n    var candidateId = $(event.currentTarget).data('id');\n    changeEmailVerified(candidateId);\n    $(this).attr('disabled', true);\n  } else {\n    var _candidateId = $(event.currentTarget).data('id');\n    changeEmailVerified(_candidateId);\n  }\n});\nwindow.changeEmailVerified = function (id) {\n  $.ajax({\n    url: candidateUrl + '/' + id + '/verify-email',\n    method: 'post',\n    cache: false,\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n};\n$(document).on('click', '.send-email-verification', function (event) {\n  var candidateId = $(event.currentTarget).attr('data-id');\n  $.ajax({\n    url: candidateUrl + '/' + candidateId + '/resend-email-verification',\n    type: 'post',\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});\n$('#candidateFilters').on('click', function () {\n  $('#candidateFiltersForm').toggleClass('d-block d-none');\n});\n$('#action_dropdown').click(function () {\n  $('#candidateFiltersForm').removeClass('d-block').addClass('d-none');\n});\n$(document).ready(function () {\n  $('#filter_status').on('change', function (e) {\n    var data = $('#filter_status').select2('val');\n    window.livewire.emit('changeFilter', 'status', data);\n  });\n  $('#immediateAvailable').on('change', function (e) {\n    var data = $('#immediateAvailable').select2('val');\n    window.livewire.emit('changeFilter', 'immediateAvailable', data);\n  });\n  $('#jobSkills').on('change', function (e) {\n    var data = $('#jobSkills').select2('val');\n    window.livewire.emit('changeFilter', 'jobSkills', data);\n  });\n});\n$(document).on('click', '#reset-filter', function () {\n  $('#jobSkills,#immediateAvailable,#filter_status').val('').change();\n});\n$(document).on('click', function (event) {\n  if ($(event.target).closest('#candidateFilters,#candidateFiltersForm').length === 0) {\n    $('#candidateFiltersForm').removeClass('d-block').addClass('d-none');\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/candidate/candidate-list.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/candidate/candidate-list.js"]();
/******/ 	
/******/ })()
;