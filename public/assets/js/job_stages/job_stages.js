/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/job_stages/job_stages.js":
/*!******************************************************!*\
  !*** ./resources/assets/js/job_stages/job_stages.js ***!
  \******************************************************/
/***/ (() => {

eval("\n\n$(document).on('click', '.addJobStageModal', function () {\n  $('#addJobStageModal').appendTo('body').modal('show');\n});\n$(document).on('submit', '#addJobStageForm', function (e) {\n  e.preventDefault();\n  if (!checkSummerNoteEmpty('#jobStageDescription', 'Description field is required.')) {\n    processingBtn('#addJobStageForm', '#jobStageBtnSave');\n    return true;\n  }\n  processingBtn('#addJobStageForm', '#jobStageBtnSave', 'loading');\n  $.ajax({\n    url: jobStageSaveUrl,\n    type: 'POST',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#addJobStageModal').modal('hide');\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#addJobStageForm', '#jobStageBtnSave');\n    }\n  });\n});\n$(document).on('click', '.edit-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var jobStageId = $(event.currentTarget).attr('data-id');\n  $.ajax({\n    url: jobStageUrl + jobStageId + '/edit',\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        var element = document.createElement('textarea');\n        element.innerHTML = result.data.name;\n        $('#jobStageId').val(result.data.id);\n        $('#editName').val(element.value);\n        $('#editDescription').summernote('code', result.data.description);\n        $('#editModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});\n$(document).on('submit', '#editForm', function (event) {\n  event.preventDefault();\n  processingBtn('#editForm', '#btnEditSave', 'loading');\n  if (!checkSummerNoteEmpty('#editDescription', 'Description field is required.')) {\n    processingBtn('#editForm', '#btnEditSave');\n    return true;\n  }\n  $.ajax({\n    url: jobStageUrl + $('#jobStageId').val(),\n    type: 'put',\n    data: $(this).serialize(),\n    success: function success(result) {\n      if (result.success) {\n        displaySuccessMessage(result.message);\n        $('#editModal').modal('hide');\n        window.livewire.emit('refresh');\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      processingBtn('#editForm', '#btnEditSave');\n    }\n  });\n});\n$(document).on('click', '.show-btn', function (event) {\n  if (ajaxCallIsRunning) {\n    return;\n  }\n  ajaxCallInProgress();\n  var jobStageId = $(event.currentTarget).attr('data-id');\n  $.ajax({\n    url: jobStageUrl + jobStageId,\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        $('#showName').html('');\n        $('#showDescription').html('');\n        $('#showName').append(result.data.name);\n        var element = document.createElement('textarea');\n        element.innerHTML = result.data.description;\n        if (element.value == '') {\n          $('#showDescription').html(\"N/A\");\n        } else {\n          $('#showDescription').html(element.value);\n        }\n        $('#showModal').appendTo('body').modal('show');\n        ajaxCallCompleted();\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    }\n  });\n});\n$(document).on('click', '.delete-btn', function (event) {\n  var jobStageId = $(event.currentTarget).attr('data-id');\n  swal({\n    title: Lang.get('messages.common.delete'),\n    text: Lang.get('messages.common.are_you_sure_want_to_delete') + '\"' + Lang.get('messages.job_stage.job_stage') + '\" ?',\n    type: 'warning',\n    showCancelButton: true,\n    closeOnConfirm: false,\n    showLoaderOnConfirm: true,\n    confirmButtonColor: '#6777ef',\n    cancelButtonColor: '#d33',\n    cancelButtonText: Lang.get('messages.common.no'),\n    confirmButtonText: Lang.get('messages.common.yes')\n  }, function () {\n    $.ajax({\n      url: jobStageUrl + jobStageId,\n      type: 'DELETE',\n      success: function success(result) {\n        if (result.success) {\n          window.livewire.emit('refresh');\n        }\n        swal({\n          title: Lang.get('messages.common.deleted'),\n          text: Lang.get('messages.job_stage.job_stage') + Lang.get('messages.common.has_been_deleted'),\n          type: 'success',\n          confirmButtonColor: '#6777ef',\n          timer: 2000\n        });\n      },\n      error: function error(data) {\n        swal({\n          title: '',\n          text: data.responseJSON.message,\n          type: 'error',\n          confirmButtonColor: '#6777ef',\n          timer: 2000\n        });\n      }\n    });\n  });\n});\n$('#addJobStageModal').on('hidden.bs.modal', function () {\n  resetModalForm('#addJobStageForm', '#jobStageValidationErrorsBox');\n  $('#jobStageDescription').summernote('code', '');\n});\n$('#editModal').on('hidden.bs.modal', function () {\n  resetModalForm('#editForm', '#editValidationErrorsBox');\n});\n$('#jobStageDescription, #editDescription').summernote({\n  minHeight: 200,\n  height: 200,\n  toolbar: [['style', ['bold', 'italic', 'underline', 'clear']], ['font', ['strikethrough']], ['para', ['paragraph']]]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/job_stages/job_stages.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/job_stages/job_stages.js"]();
/******/ 	
/******/ })()
;