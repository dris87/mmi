/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/employer_profile/employer_profile.js":
/*!******************************************************************!*\
  !*** ./resources/assets/js/employer_profile/employer_profile.js ***!
  \******************************************************************/
/***/ (() => {

eval("\n\n$(document).on('submit', '#editProfileForm', function (event) {\n  event.preventDefault();\n  var loadingButton = jQuery(this).find('#btnPrEditSave');\n  loadingButton.button('loading');\n  $.ajax({\n    url: profileUpdateUrl,\n    type: 'post',\n    data: new FormData($(this)[0]),\n    processData: false,\n    contentType: false,\n    success: function success(result) {\n      $('#editProfileModal').modal('hide');\n      location.reload();\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      loadingButton.button('reset');\n    }\n  });\n});\n$(document).on('submit', '#changePasswordForm', function (event) {\n  event.preventDefault();\n  var isValidate = validatePassword();\n  if (!isValidate) {\n    return false;\n  }\n  var loadingButton = jQuery(this).find('#btnPrPasswordEditSave');\n  loadingButton.button('loading');\n  $.ajax({\n    url: changePasswordUrl,\n    type: 'post',\n    data: new FormData($(this)[0]),\n    processData: false,\n    contentType: false,\n    success: function success(result) {\n      if (result.success) {\n        $('#changePasswordModal').modal('hide');\n        displaySuccessMessage(result.message);\n      }\n    },\n    error: function error(result) {\n      displayErrorMessage(result.responseJSON.message);\n    },\n    complete: function complete() {\n      loadingButton.button('reset');\n    }\n  });\n});\n$('#editProfileModal').on('hidden.bs.modal', function () {\n  resetModalForm('#editProfileForm', '#validationErrorsBox');\n  $('#btnPrEditSave').prop('disabled', false);\n});\n$('#changeLanguageModal').on('hidden.bs.modal', function () {\n  resetModalForm('#changeLanguageForm', '#editProfileValidationErrorsBox');\n  $('#language').trigger('change.select2');\n});\n// open edit user profile model\n$(document).on('click', '.editProfileModal', function (event) {\n  renderProfileData();\n});\nwindow.renderProfileData = function () {\n  $.ajax({\n    url: profileUrl,\n    type: 'GET',\n    success: function success(result) {\n      if (result.success) {\n        var user = result.data.employer;\n        var company = result.data.company;\n        $('#editUserId').val(user.id);\n        $('#companyId').val(company.id);\n        $('#firstName').val(user.first_name);\n        $('#editEmail').val(user.email);\n        $('#editphoneNumber').val(user.phone);\n        if (isEmpty(company.company_url)) {\n          $('#previewImage').attr('src', defaultImageUrl);\n        } else {\n          $('#previewImage').attr('src', company.company_url);\n        }\n        $('#editProfileModal').appendTo('body').modal('show');\n      }\n    }\n  });\n};\n$(document).on('change', '#employerImage', function () {\n  if (isValidFile($(this), '#validationErrorsBox')) {\n    validatePhoto(this, '#previewImage');\n  }\n});\nwindow.validatePhoto = function (input, selector) {\n  var displayPreview = true;\n  if (input.files && input.files[0]) {\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      var image = new Image();\n      image.src = e.target.result;\n      image.onload = function () {\n        if (image.height / image.width !== 1) {\n          $('#validationErrorsBox').removeClass('d-none');\n          $('#validationErrorsBox').html(Lang.get('messages.common.image_aspect_ratio')).show();\n          $('#btnPrEditSave').prop('disabled', true);\n          return false;\n        }\n        $(selector).attr('src', e.target.result);\n        $('#btnPrEditSave').prop('disabled', false);\n        displayPreview = true;\n      };\n    };\n    if (displayPreview) {\n      reader.readAsDataURL(input.files[0]);\n      $(selector).show();\n    }\n  }\n};\n$('#changePasswordModal').on('hidden.bs.modal', function () {\n  resetModalForm('#changePasswordForm', '#editPasswordValidationErrorsBox');\n});\nfunction validatePassword() {\n  var currentPassword = $('#pfCurrentPassword').val().trim();\n  var password = $('#pfNewPassword').val().trim();\n  var confirmPassword = $('#pfNewConfirmPassword').val().trim();\n  if (currentPassword == '' || password == '' || confirmPassword == '') {\n    $('#editPasswordValidationErrorsBox').show().html(Lang.get('messages.user.required_field_messages'));\n    return false;\n  }\n  return true;\n}\n$(document).on('submit', '#changeLanguageForm', function (event) {\n  event.preventDefault();\n  var loadingButton = jQuery(this).find('#btnLanguageChange');\n  loadingButton.button('loading');\n  $.ajax({\n    url: updateLanguageURL,\n    type: 'post',\n    data: new FormData($(this)[0]),\n    processData: false,\n    contentType: false,\n    success: function success(result) {\n      $('#changePasswordModal').modal('hide');\n      displaySuccessMessage(result.message);\n      setTimeout(function () {\n        location.reload();\n      }, 1500);\n    },\n    error: function error(result) {\n      manageAjaxErrors(result, 'editProfileValidationErrorsBox');\n    },\n    complete: function complete() {\n      loadingButton.button('reset');\n    }\n  });\n});\n$('#changePasswordModal').on('shown.bs.modal', function () {\n  $(this).find('[autofocus]').focus();\n});\n$(document).on('click', '.changePasswordModal', function () {\n  $('#changePasswordModal').appendTo('body').modal('show');\n});\n$(document).on('click', '.changeLanguageModal', function () {\n  $('#changeLanguageModal').appendTo('body').modal('show');\n});\n$(document).ready(function () {\n  $('#language').select2({\n    width: '100%'\n  });\n  $(\"#editEmail\").keypress(function (e) {\n    return false;\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/employer_profile/employer_profile.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/employer_profile/employer_profile.js"]();
/******/ 	
/******/ })()
;