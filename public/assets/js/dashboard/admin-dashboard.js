/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/dashboard/admin-dashboard.js":
/*!**********************************************************!*\
  !*** ./resources/assets/js/dashboard/admin-dashboard.js ***!
  \**********************************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  'use strict';\n\n  var timeRange = $('#timeRange');\n  var isPickerApply = false;\n  var today = moment();\n  var start = today.clone().startOf('week');\n  var end = today.clone().endOf('week');\n  timeRange.on('apply.daterangepicker', function (ev, picker) {\n    isPickerApply = true;\n    start = picker.startDate.format('YYYY-MM-D  H:mm:ss');\n    end = picker.endDate.format('YYYY-MM-D  H:mm:ss');\n    loadDashboardData(start, end);\n  });\n  var lastMonth = moment().startOf('month').subtract(1, 'days');\n  var thisMonthStart = moment().startOf('week');\n  var thisMonthEnd = moment().endOf('week');\n  window.cb = function (start, end) {\n    timeRange.find('span').html(start.format('MMM D, YYYY') + ' - ' + end.format('MMM D, YYYY'));\n  };\n  timeRange.daterangepicker({\n    startDate: start,\n    endDate: end,\n    opens: 'left',\n    showDropdowns: true,\n    autoUpdateInput: false,\n    ranges: {\n      'This Week': [moment().startOf('week'), moment().endOf('week')],\n      'Last Week': [moment().startOf('week').subtract(7, 'days'), moment().startOf('week').subtract(1, 'days')]\n    }\n  }, cb);\n  cb(start, end);\n  window.loadDashboardData = function (startDate, endDate) {\n    $.ajax({\n      type: 'GET',\n      url: adminDashboardChartData,\n      dataType: 'json',\n      data: {\n        start_date: startDate,\n        end_date: endDate\n      },\n      cache: false\n    }).done(WeeklyBarChart, PostStatistics);\n  };\n  window.WeeklyBarChart = function (result) {\n    $('#weeklyUserBarChartContainer').html('');\n    $('canvas#weeklyUserBarChart').remove();\n    $('#weeklyUserBarChartContainer').append('<canvas id=\"weeklyUserBarChart\" width=\"515\" height=\"413\"></canvas>');\n    var data = result.data.weeklyChartData;\n    var weeklyData = {\n      labels: data.weeklyLabels,\n      datasets: [{\n        label: 'Employers',\n        backgroundColor: '#6777ef',\n        data: data.totalEmployerCount\n      }, {\n        label: 'Candidates',\n        backgroundColor: '#3abaf4',\n        data: data.totalCandidateCount\n      }]\n    };\n    var ctx = $('#weeklyUserBarChart');\n    var config = new Chart(ctx, {\n      type: 'bar',\n      data: weeklyData,\n      options: {\n        scales: {\n          xAxes: [{\n            stacked: true,\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              min: 0,\n              precision: 0\n            },\n            type: 'linear'\n          }]\n        }\n      }\n    });\n  };\n  window.PostStatistics = function (result) {\n    $('#postStatisticsChartContainer').html('');\n    $('canvas#postStatisticsChart').remove();\n    $('#postStatisticsChartContainer').append('<canvas id=\"postStatisticsChart\" width=\"1031\" height=\"400\"></canvas>');\n    var data = result.data.postStatisticsChartData;\n    var postStatisticsLineChartData = {\n      labels: data.weeklyPostLabels,\n      datasets: [{\n        label: 'Posts',\n        data: data.totalPostCount,\n        backgroundColor: '#6777ef',\n        borderColor: '#6777ef',\n        hoverOffset: 4,\n        pointRadius: 5,\n        pointHoverRadius: 5,\n        fill: false,\n        tension: 0.1\n      }]\n    };\n    var postStatistics = $('#postStatisticsChart');\n    var myChart = new Chart(postStatistics, {\n      type: 'line',\n      data: postStatisticsLineChartData,\n      options: {\n        legend: false,\n        scales: {\n          xAxes: [{\n            stacked: true,\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              min: 0,\n              precision: 0\n            },\n            type: 'linear'\n          }]\n        }\n      }\n    });\n  };\n  loadDashboardData(start.format('YYYY-MM-D H:mm:ss'), end.format('YYYY-MM-D H:mm:ss'));\n});\n$(document).ready(function () {\n  var applyBtn = $('.range_inputs > button.applyBtn');\n  $(document).on('click', '.ranges li', function () {\n    if ($(this).data('range-key') === 'Custom Range') {\n      applyBtn.css('display', 'initial');\n    } else {\n      applyBtn.css('display', 'none');\n    }\n  });\n  applyBtn.css('display', 'none');\n});\n$(document).ready(function () {\n  $(\"#recent-employee-scroll\").niceScroll({\n    touchbehavior: true\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/dashboard/admin-dashboard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/dashboard/admin-dashboard.js"]();
/******/ 	
/******/ })()
;