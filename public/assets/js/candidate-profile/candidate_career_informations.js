/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/candidates/candidate-profile/candidate_career_informations.js":
/*!*******************************************************************************************!*\
  !*** ./resources/assets/js/candidates/candidate-profile/candidate_career_informations.js ***!
  \*******************************************************************************************/
/***/ (() => {

eval("\n\n$(document).ready(function () {\n  $('#countryId, #educationCountryId, #editCountry, #editState, #editCity, #degreeLevelId, #editEducationCountry, #editEducationState, #editEducationCity').select2({\n    'width': '100%'\n  });\n  $('#addExperienceModal').on('shown.bs.modal', function () {\n    setDatePicker('#startDate', '#endDate');\n  });\n  $('#editExperienceModal').on('shown.bs.modal', function () {\n    setDatePicker('#editStartDate', '#editEndDate');\n  });\n  window.setDatePicker = function (startDate, endDate) {\n    $(startDate).datetimepicker(DatetimepickerDefaults({\n      format: 'YYYY-MM-DD',\n      useCurrent: true,\n      sideBySide: true,\n      maxDate: new moment()\n    }));\n    $(endDate).datetimepicker(DatetimepickerDefaults({\n      format: 'YYYY-MM-DD',\n      sideBySide: true,\n      maxDate: new moment(),\n      useCurrent: false\n    }));\n  };\n  window.setExperienceSelect2 = function () {\n    $('#stateId').select2({\n      'width': '100%',\n      'placeholder': 'Select State'\n    });\n    $('#cityId').select2({\n      'width': '100%',\n      'placeholder': 'Válasszon települést'\n    });\n  };\n  window.setEducationSelect2 = function () {\n    $('#educationStateId').select2({\n      'width': '100%',\n      'placeholder': 'Select State'\n    });\n    $('#educationCityId').select2({\n      'width': '100%',\n      'placeholder': 'Válasszon települést'\n    });\n  };\n  $('#startDate').on('dp.change', function (e) {\n    $('#endDate').val('');\n    $('#endDate').data('DateTimePicker').minDate(e.date);\n  });\n  $('#editStartDate').on('dp.change', function (e) {\n    setTimeout(function () {\n      $('#editEndDate').data('DateTimePicker').minDate(e.date);\n    }, 1000);\n  });\n  $('#default').on('click', function () {\n    if ($(this).prop('checked') == true) {\n      $('#endDate').prop('disabled', true);\n      $('#endDate').val('');\n      $('#endDate').val('').removeAttr('required', false);\n      $('#requiredText').addClass('d-none');\n    } else if ($(this).prop('checked') == false) {\n      $('#endDate').val('').attr('required', true);\n      $('#requiredText').removeClass('d-none');\n      $('#endDate').data('DateTimePicker').minDate($('#startDate').val());\n      $('#endDate').prop('disabled', false);\n    }\n  });\n  $('#editWorking').on('click', function () {\n    if ($(this).prop('checked') == true) {\n      $('#editEndDate').prop('disabled', true);\n      $('#editEndDate').val('');\n      $('#editEndDate').val('').removeAttr('required', false);\n      $('#editRequiredText').addClass('d-none');\n    } else if ($(this).prop('checked') == false) {\n      $('#editEndDate').val('').attr('required', true);\n      $('#editRequiredText').removeClass('d-none');\n      $('#editEndDate').data('DateTimePicker').minDate($('#editStartDate').val());\n      $('#editEndDate').prop('disabled', false);\n    }\n  });\n  $('.addExperienceModal').on('click', function () {\n    setExperienceSelect2();\n    $('#addExperienceModal').appendTo('body').modal('show');\n  });\n  $('.addEducationModal').on('click', function () {\n    setEducationSelect2();\n    $('#addEducationModal').appendTo('body').modal('show');\n  });\n  window.renderExperienceTemplate = function (experienceArray) {\n    var candidateExperienceCount = $('.candidate-experience-container .candidate-experience:last').data('experience-id') != undefined ? $('.candidate-experience-container .candidate-experience:last').data('experience-id') + 1 : 0;\n    var template = $.templates('#candidateExperienceTemplate');\n    var endDate = experienceArray.currently_working == 1 ? present : moment(experienceArray.end_date, 'YYYY-MM-DD').format('Do MMM, YYYY');\n    var data = {\n      candidateExperienceNumber: candidateExperienceCount,\n      id: experienceArray.id,\n      title: experienceArray.experience_title,\n      company: experienceArray.company,\n      startDate: moment(experienceArray.start_date, 'YYYY-MM-DD').format('Do MMM, YYYY'),\n      endDate: endDate,\n      description: experienceArray.description,\n      country: experienceArray.country\n    };\n    var stageTemplateHtml = template.render(data);\n    $('.candidate-experience-container').append(stageTemplateHtml);\n    $('#notfoundExperience').addClass('d-none');\n  };\n  $(document).on('submit', '#addNewExperienceForm', function (e) {\n    e.preventDefault();\n    processingBtn('#addNewExperienceForm', '#btnExperienceSave', 'loading');\n    $.ajax({\n      url: addExperienceUrl,\n      type: 'POST',\n      data: $(this).serialize(),\n      success: function success(result) {\n        if (result.success) {\n          $('#notfoundExperience').addClass('d-none');\n          displaySuccessMessage(result.message);\n          $('#addExperienceModal').modal('hide');\n          renderExperienceTemplate(result.data);\n        }\n      },\n      error: function error(result) {\n        displayErrorMessage(result.responseJSON.message);\n      },\n      complete: function complete() {\n        processingBtn('#addNewExperienceForm', '#btnExperienceSave');\n      }\n    });\n  });\n  $(document).on('click', '.edit-experience', function (event) {\n    var experienceId = $(event.currentTarget).data('id');\n    renderExperienceData(experienceId);\n  });\n  window.renderExperienceData = function (id) {\n    $.ajax({\n      url: candidateUrl + id + '/edit-experience',\n      type: 'GET',\n      success: function success(result) {\n        if (result.success) {\n          $('#experienceId').val(result.data.id);\n          $('#editTitle').val(result.data.experience_title);\n          $('#editCompany').val(result.data.company);\n          $('#editCountry').val(result.data.country_id).trigger('change', [{\n            stateId: result.data.state_id,\n            cityId: result.data.city_id\n          }]);\n          $('#editStartDate').val(moment(result.data.start_date).format('YYYY-MM-DD'));\n          $('#editDescription').val(result.data.description);\n          if (result.data.currently_working == 1) {\n            $('#editWorking').prop('checked', true);\n            $('#editEndDate').val('');\n          } else {\n            $('#editWorking').prop('checked', false);\n            $('#editEndDate').val(moment(result.data.end_date).format('YYYY-MM-DD'));\n            $('#editRequiredText').removeClass('d-none');\n          }\n          if (result.data.currently_working == 1) {\n            $('#editEndDate').prop('disabled', true);\n          }\n          $('#editExperienceModal').appendTo('body').modal('show');\n        }\n      },\n      error: function error(result) {\n        displayErrorMessage(result.responseJSON.message);\n      }\n    });\n  };\n  $(document).on('submit', '#editExperienceForm', function (event) {\n    event.preventDefault();\n    processingBtn('#editExperienceForm', '#btnEditExperienceSave', 'loading');\n    var id = $('#experienceId').val();\n    $.ajax({\n      url: experienceUrl + id,\n      type: 'put',\n      data: $(this).serialize(),\n      success: function success(result) {\n        if (result.success) {\n          displaySuccessMessage(result.message);\n          $('#editExperienceModal').modal('hide');\n          setTimeout(function () {\n            location.reload();\n          }, 3000);\n          $('.candidate-experience-container').children('.candidate-experience').each(function () {\n            var candidateExperienceId = $(this).attr('data-id');\n            if (candidateExperienceId == result.data.id) {\n              $(this).remove();\n            }\n          });\n          renderExperienceTemplate(result.data.candidateExperience);\n        }\n      },\n      error: function error(result) {\n        displayErrorMessage(result.responseJSON.message);\n      },\n      complete: function complete() {\n        processingBtn('#editExperienceForm', '#btnEditExperienceSave');\n      }\n    });\n  });\n  $('#addExperienceModal').on('hidden.bs.modal', function () {\n    resetModalForm('#addNewExperienceForm', '#validationErrorsBox');\n    $('#countryId, #stateId, #cityId').val('');\n    $('#stateId, #cityId').empty();\n    $('#countryId').trigger('change.select2');\n  });\n  $('#addEducationModal').on('hidden.bs.modal', function () {\n    resetModalForm('#addNewEducationForm', '#validationErrorsBox');\n    $('#degreeLevelId').val('');\n    $('#degreeLevelId').select2({\n      'width': '100%',\n      'placeholder': 'Válasszon végzettségi szintet'\n    });\n    $('#educationCountryId, #educationStateId, #educationCityId').val('');\n    $('#educationStateId, #educationCityId').empty();\n    $('#educationCountryId').trigger('change.select2');\n  });\n  $(document).on('click', '.delete-experience', function (event) {\n    var experienceId = $(event.currentTarget).data('id');\n    deleteItem(experienceUrl + experienceId, 'Experience', '.candidate-experience-container', '.candidate-experience', '#notfoundExperience');\n  });\n  window.renderEducationTemplate = function (educationArray) {\n    var candidateEducationCount = $('.candidate-education-container .candidate-education:last').data('education-id') != undefined ? $('.candidate-education-container .candidate-education:last').data('experience-id') + 1 : 0;\n    var template = $.templates('#candidateEducationTemplate');\n    var data = {\n      candidateEducationNumber: candidateEducationCount,\n      id: educationArray.id,\n      degreeLevel: educationArray.degree_level.name,\n      degreeTitle: educationArray.degree_title,\n      year: educationArray.year,\n      country: educationArray.country,\n      institute: educationArray.institute\n    };\n    var stageTemplateHtml = template.render(data);\n    $('.candidate-education-container').append(stageTemplateHtml);\n    $('#notfoundEducation').addClass('d-none');\n  };\n  $(document).on('submit', '#addNewEducationForm', function (e) {\n    e.preventDefault();\n    processingBtn('#addNewEducationForm', '#btnEducationSave', 'loading');\n    $.ajax({\n      url: addEducationUrl,\n      type: 'POST',\n      data: $(this).serialize(),\n      success: function success(result) {\n        if (result.success) {\n          $('#notfoundEducation').addClass('d-none');\n          displaySuccessMessage(result.message);\n          $('#addEducationModal').modal('hide');\n          renderEducationTemplate(result.data);\n        }\n      },\n      error: function error(result) {\n        displayErrorMessage(result.responseJSON.message);\n      },\n      complete: function complete() {\n        processingBtn('#addNewEducationForm', '#btnEducationSave');\n      }\n    });\n  });\n  $(document).on('click', '.edit-education', function (event) {\n    var educationId = $(event.currentTarget).data('id');\n    renderEducationData(educationId);\n  });\n  window.renderEducationData = function (id) {\n    $.ajax({\n      url: candidateUrl + id + '/edit-education',\n      type: 'GET',\n      success: function success(result) {\n        if (result.success) {\n          $('#educationId').val(result.data.id);\n          $('#editDegreeLevel').val(result.data.degree_level.id).trigger('change');\n          $('#editDegreeTitle').val(result.data.degree_title);\n          $('#editEducationCountry').val(result.data.country_id).trigger('change', [{\n            stateId: result.data.state_id,\n            cityId: result.data.city_id\n          }]);\n          $('#editInstitute').val(result.data.institute);\n          $('#editResult').val(result.data.result);\n          $('#editYear').val(result.data.year).trigger('change');\n          $('#editEducationModal').appendTo('body').modal('show');\n        }\n      },\n      error: function error(result) {\n        displayErrorMessage(result.responseJSON.message);\n      }\n    });\n  };\n  $(document).on('submit', '#editEducationForm', function (event) {\n    event.preventDefault();\n    processingBtn('#editEducationForm', '#btnEditEducationSave', 'loading');\n    var id = $('#educationId').val();\n    $.ajax({\n      url: educationUrl + id,\n      type: 'put',\n      data: $(this).serialize(),\n      success: function success(result) {\n        if (result.success) {\n          displaySuccessMessage(result.message);\n          $('#editEducationModal').modal('hide');\n          setTimeout(function () {\n            location.reload();\n          }, 3000);\n          $('.candidate-education-container').children('.candidate-education').each(function () {\n            var candidateEducationId = $(this).attr('data-id');\n            if (candidateEducationId == result.data.id) {\n              $(this).remove();\n            }\n          });\n          renderEducationTemplate(result.data.candidateEducation);\n        }\n      },\n      error: function error(result) {\n        displayErrorMessage(result.responseJSON.message);\n      },\n      complete: function complete() {\n        processingBtn('#editEducationForm', '#btnEditEducationSave');\n      }\n    });\n  });\n  $('#editEducationModal').on('hidden.bs.modal', function () {\n    resetModalForm('#addNewEducationForm', '#validationErrorsBox');\n  });\n  $(document).on('click', '.delete-education', function (event) {\n    var educationId = $(event.currentTarget).data('id');\n    deleteItem(educationUrl + educationId, 'Education', '.candidate-education-container', '.candidate-education', '#notfoundEducation');\n  });\n  window.deleteItem = function (url, header, parent, child, selector) {\n    swal({\n      title: Lang.get('messages.common.delete'),\n      text: Lang.get('messages.common.are_you_sure_want_to_delete'),\n      type: 'warning',\n      showCancelButton: true,\n      closeOnConfirm: false,\n      showLoaderOnConfirm: true,\n      confirmButtonColor: '#6777ef',\n      cancelButtonColor: '#d33',\n      cancelButtonText: Lang.get('messages.common.no'),\n      confirmButtonText: Lang.get('messages.common.yes')\n    }, function () {\n      deleteItemAjax(url, header, parent, child, selector);\n    });\n  };\n  function deleteItemAjax(url, header, parent, child, selector) {\n    $.ajax({\n      url: url,\n      type: 'DELETE',\n      dataType: 'json',\n      success: function success(obj) {\n        if (obj.success) {\n          $(parent).children(child).each(function () {\n            var templateId = $(this).attr('data-id');\n            if (templateId == obj.data) {\n              $(this).remove();\n            }\n          });\n          if ($(parent).children(child).length <= 0) {\n            $(selector).removeClass('d-none');\n          }\n        }\n        swal({\n          title: Lang.get('messages.common.deleted'),\n          text: Lang.get('messages.common.has_been_deleted'),\n          type: 'success',\n          confirmButtonColor: '#6777ef',\n          timer: 2000\n        });\n      },\n      error: function error(data) {\n        swal({\n          title: '',\n          text: data.responseJSON.message,\n          type: 'error',\n          confirmButtonColor: '#6777ef',\n          timer: 5000\n        });\n      }\n    });\n  }\n  $('#countryId, #educationCountryId, #editCountry, #editEducationCountry').on('change', function (e, paramData) {\n    var modalType = $(this).data('modal-type');\n    var modalTypeHasEdit = typeof $(this).data('is-edit') === 'undefined' ? false : true;\n    $.ajax({\n      url: companyStateUrl,\n      type: 'get',\n      dataType: 'json',\n      data: {\n        postal: $(this).val()\n      },\n      success: function success(data) {\n        $(modalType === 'experience' ? !modalTypeHasEdit ? '#stateId' : '#editState' : !modalTypeHasEdit ? '#educationStateId' : '#editEducationState').empty();\n        $(modalType === 'experience' ? !modalTypeHasEdit ? '#stateId' : '#editState' : !modalTypeHasEdit ? '#educationStateId' : '#editEducationState').append('<option value=\"\" selected>Select State</option>');\n        $.each(data.data, function (i, v) {\n          $(modalType === 'experience' ? !modalTypeHasEdit ? '#stateId' : '#editState' : !modalTypeHasEdit ? '#educationStateId' : '#editEducationState').append($('<option></option>').attr('value', i).text(v));\n        });\n        if (modalTypeHasEdit) $(modalType === 'experience' ? '#editState' : '#editEducationState').val(typeof paramData !== 'undefined' ? paramData.stateId : '').trigger('change', typeof paramData !== 'undefined' ? [{\n          cityId: paramData.cityId\n        }] : '');\n      }\n    });\n  });\n  $('#stateId, #educationStateId, #editState, #editEducationState').on('change', function (e, paramData) {\n    var modalType = $(this).data('modal-type');\n    var modalTypeHasEdit = typeof $(this).data('is-edit') === 'undefined' ? false : true;\n    $.ajax({\n      url: companyCityUrl,\n      type: 'get',\n      dataType: 'json',\n      data: {\n        state: $(this).val(),\n        country: $(modalType === 'experience' ? !modalTypeHasEdit ? '#countryId' : '#editCountry' : !modalTypeHasEdit ? '#educationCountryId' : '#editEducationCountry').val()\n      },\n      success: function success(data) {\n        $(modalType === 'experience' ? !modalTypeHasEdit ? '#cityId' : '#editCity' : !modalTypeHasEdit ? '#educationCityId' : '#editEducationCity').empty();\n        $(modalType === 'experience' ? !modalTypeHasEdit ? '#cityId' : '#editCity' : !modalTypeHasEdit ? '#educationCityId' : '#editEducationCity').append('<option value=\"\" selected>Select City</option>');\n        $.each(data.data, function (i, v) {\n          $(modalType === 'experience' ? !modalTypeHasEdit ? '#cityId' : '#editCity' : !modalTypeHasEdit ? '#educationCityId' : '#editEducationCity').append($('<option></option>').attr('value', i).text(v));\n        });\n        if (modalTypeHasEdit) $(modalType === 'experience' ? '#editCity' : '#editEducationCity').val(typeof paramData !== 'undefined' ? paramData.cityId : '').trigger('change.select2');\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/candidates/candidate-profile/candidate_career_informations.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/candidates/candidate-profile/candidate_career_informations.js"]();
/******/ 	
/******/ })()
;